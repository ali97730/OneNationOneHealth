[{"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\index.js":"1","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\reportWebVitals.js":"2","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\App.js":"3","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\LoginScreen.js":"4","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\routing\\PrivateRoute.js":"5","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\PrivateScreen.js":"6","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\ForgotPasswordScreen.js":"7","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\RegisterScreen.js":"8","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\ResetPasswordScreen.js":"9","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\Card.js":"10","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\Details.js":"11","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\Navbar.js":"12","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\stateAndCity.js":"13"},{"size":517,"mtime":1630855795325,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1630855795326,"results":"16","hashOfConfig":"15"},{"size":1864,"mtime":1634133815123,"results":"17","hashOfConfig":"15"},{"size":2667,"mtime":1633511379532,"results":"18","hashOfConfig":"15"},{"size":437,"mtime":1631020211955,"results":"19","hashOfConfig":"15"},{"size":27369,"mtime":1634136854537,"results":"20","hashOfConfig":"15"},{"size":2153,"mtime":1633511734955,"results":"21","hashOfConfig":"15"},{"size":3532,"mtime":1633511609251,"results":"22","hashOfConfig":"15"},{"size":2871,"mtime":1633511739389,"results":"23","hashOfConfig":"15"},{"size":2490,"mtime":1634058080649,"results":"24","hashOfConfig":"15"},{"size":3829,"mtime":1634293834083,"results":"25","hashOfConfig":"15"},{"size":1111,"mtime":1633598887171,"results":"26","hashOfConfig":"15"},{"size":24526,"mtime":1634017773043,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"12hlvi5",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\index.js",[],["57","58"],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\reportWebVitals.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\App.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\LoginScreen.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\routing\\PrivateRoute.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\PrivateScreen.js",["59"],"\r\n\r\nimport { useState ,useEffect, } from \"react\";\r\nimport  Navbar  from \"../screens/Navbar\"\r\nimport axios from \"axios\";\r\nimport validator from 'validator';\r\nimport { Button, Form, FormGroup, Label, Input,InputGroup, InputGroupAddon, InputGroupText,FormFeedback, CustomInput,\r\n  Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { saveAs } from 'file-saver';\r\nimport { jsonState } from \"../../stateAndCity\";\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport \"./PrivateScreen.css\"\r\nimport DateRangeOutlinedIcon from '@mui/icons-material/DateRangeOutlined';\r\nimport LocalHospitalOutlinedIcon from '@mui/icons-material/LocalHospitalOutlined';\r\nimport ConnectWithoutContactOutlinedIcon from '@mui/icons-material/ConnectWithoutContactOutlined';\r\n\r\nimport { Divider } from \"@mui/material\";\r\n\r\n\r\nconst PrivateScreen = ({history,match}) => {\r\n\r\n    useEffect(() => {\r\n      const getUserDetails= async()=>{\r\n        let {data} =   await axios.get(`/api/private/details/${match.params.user_id}`,config)\r\n          console.log(data)\r\n         if(data.user){\r\n            setData({\r\n              \r\n              fullname:data.fullname,\r\n              contactNumber:data.contactNumber,\r\n              address:data.address,\r\n              city:data.city,\r\n              state:data.state,\r\n              pincode:data.pincode,\r\n              gender:data.gender,\r\n              dateOfBirth:data.dateOfBirth,\r\n              emergencyPhoneNumber:data.emergencyPhoneNumber,\r\n              bloodGroup:data.bloodGroup,\r\n              familyDoctorNumber:data.familyDoctorNumber,\r\n              anyDisability:data.anyDisability,\r\n              severeDisease:data.severeDisease,\r\n              donor:data.donor,\r\n              age:data.age,\r\n              image:data.images,\r\n              userId:data.user,\r\n              items:data.items\r\n            })\r\n            \r\n            setImg(data.images)\r\n         }\r\n     }\r\n    \r\n       getUserDetails()\r\n    },[] )\r\n\r\n    const [familyDoc,setFamilyDoc] =  useState(false)\r\n    const [disabled,setDisabled] =  useState(false)\r\n    const [don,setDon] =  useState(false)\r\n    const [dis,setDis] =  useState(false)\r\n    const stateofIndia = Object.keys(jsonState)\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n    const [item,setItem] = useState({\r\n      dateofDiagnosed:\"\",\r\n      hospitalname:\"\",\r\n      purpose:\"\"\r\n    })\r\n    const {dateofDiagnosed,hospitalname,purpose} =item\r\n    const [items,setitems] = useState([])\r\n    \r\n  const [data,setData] = useState({\r\n    fullname:\"\",\r\n    contactNumber:\"\",\r\n    address:\"\",\r\n    city:jsonState[stateofIndia[0]][0],\r\n    state:stateofIndia[0],\r\n    pincode:\"\",\r\n    gender:\"male\",\r\n    dateOfBirth:\"\",\r\n    emergencyPhoneNumber:\"\",\r\n    bloodGroup:\"A+\",\r\n    familyDoctorNumber:\"\",\r\n    anyDisability:\"\",\r\n    severeDisease:\"\",\r\n    donor:\"\",\r\n    age:\"\",\r\n    image:[],\r\n    userId:\"\",\r\n    items:items\r\n  })\r\n  const [img,setImg] = useState([])\r\n  const [error,setError] = useState({\r\n    fullname:null,\r\n    contactNumber:null,\r\n    address:null,\r\n    pincode:null,\r\n    dateOfBirth:\"\",\r\n    emergencyPhoneNumber:null,\r\n    familyDoctorNumber:null,\r\n    anyDisability:\"\",\r\n    severeDisease:\"\",\r\n    age:null,\r\n    image:[],\r\n    userId:\"\"\r\n  });\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    },\r\n  };\r\n\r\n \r\n  const {\r\n    fullname,\r\n    contactNumber,\r\n    age,\r\n    address,\r\n    city,\r\n    state,\r\n    pincode,\r\n    gender,\r\n    dateOfBirth,\r\n    emergencyPhoneNumber,\r\n    bloodGroup,\r\n    familyDoctorNumber,\r\n    anyDisability,\r\n    severeDisease,\r\n    donor,\r\n  } = data\r\n\r\n  function Validation(field,value){\r\n        if(field === \"fullname\"){validator.isAlpha(value) ? setError({...error,fullname:false}):setError({...error,fullname:true})}\r\n        if(field === \"contactNumber\"){ validator.isNumeric(value) && value.length ===10 && (value%1 === 0 ) ? setError({...error,contactNumber:false}):setError({...error,contactNumber:true})}\r\n        if(field === \"emergencyPhoneNumber\"){ validator.isNumeric(value) && value.length ===10 && (value%1 === 0 ) ? setError({...error,emergencyPhoneNumber:false}):setError({...error,emergencyPhoneNumber:true})}\r\n        if(field === \"familyDoctorNumber\"){ validator.isNumeric(value) && (value.length ===10 || value.length===0) && (value%1 === 0 ) ? setError({...error,familyDoctorNumber:false}):setError({...error,familyDoctorNumber:true})}\r\n        if(field === \"age\"){ (value%1 === 0 )  && value > 0 && value <=100 ? setError({...error,age:false}):setError({...error,age:true})}\r\n        if(field === \"address\"){ value.length > 0 && value.length <=100 ? setError({...error,address:false}):setError({...error,address:true})}\r\n        if(field === \"pincode\"){ validator.isNumeric(value) && value.length <=6 && value >0 ? setError({...error,pincode:false}):setError({...error,pincode:true})}\r\n    \r\n\r\n  } \r\n \r\n  var formData = new FormData();\r\n  const handleChange=name=>event=>{\r\n\r\n\r\n      Validation(name,event.target.value)\r\n   if(name ===\"state\"){\r\n    const value = event.target.value\r\n    setData({...data,[name]:value,city:jsonState[value][0]})\r\n   }else{\r\n    if(name ===\"image\"){\r\n      let arr = Array.from(event.target.files)\r\n      setData({...data,image:arr})\r\n    }else{\r\n      const value = event.target.value\r\n      setData({...data,[name]:value})\r\n    }\r\n   }\r\n}\r\n\r\n  \r\n  const submitHandler = async (e)=>{\r\n    e.preventDefault()\r\n  try {\r\n    formData.set(\"fullname\",fullname)\r\n    formData.set(\"contactNumber\",contactNumber)\r\n    formData.set(\"age\",age)\r\n    formData.set(\"address\", address)\r\n    formData.set(\"city\",city)\r\n    formData.set(\"state\",state)\r\n    formData.set(\"pincode\",pincode)\r\n    formData.set(\"gender\",gender)\r\n    formData.set(\"dateOfBirth\",dateOfBirth)\r\n    formData.set(\"emergencyPhoneNumber\",emergencyPhoneNumber)\r\n    formData.set(\"bloodGroup\",bloodGroup)\r\n    formData.set(\"familyDoctorNumber\",familyDoctorNumber)\r\n    formData.set(\"anyDisability\",anyDisability)\r\n    formData.set(\"severeDisease\",severeDisease)\r\n    formData.set(\"donor\",donor)\r\n    formData.set(\"items\",items)\r\n\r\n  \r\n    if(data.image){\r\n      for(var i=0;i<data.image.length;i++){\r\n        formData.append(\"image\",data.image[i])\r\n      } \r\n    }\r\n    if(!data.userId){\r\n    \r\n      await axios.post(`/api/private/details/${match.params.user_id}`,formData,config).then(\r\n        (response)=>{\r\n            console.log(response)\r\n            history.push(`/details/certificate/${match.params.user_id}`)\r\n          }\r\n      ).catch((err)=>{\r\n        console.log(err)\r\n      })\r\n    }else{\r\n\r\n      await axios.put(`/api/private/details/${match.params.user_id}`,formData,config).then(\r\n        (response)=>{\r\n            console.log(response)\r\n            history.push(`/details/certificate/${data.userId}`)\r\n        }\r\n      ).catch((err)=>{\r\n        history.push(\"/\")\r\n      })\r\n\r\n    }\r\n\r\n  } catch (error) {\r\n    \r\n    console.log(error)\r\n    history.push(\"/\")\r\n  }\r\n  \r\n}\r\n\r\n  return(\r\n\r\n   <div style={{backgroundImage:\"linear-gradient(#DB0B5F, #6F00ED)\",color:\"white\"}}>\r\n      <Navbar/>\r\n   <Form onSubmit={submitHandler} className=\"container parentContainer\">\r\n      <FormGroup className=\"row formRow\">\r\n         <div className=\"col-3 offset-1\">\r\n           <Label  className=\"formLabel\" htmlFor=\"fullname\"><h3>Fullname </h3></Label>\r\n         </div>\r\n         <div className=\"col-7\">\r\n           <Input type=\"text\" name=\"fullname\" id=\"fullname\" valid={fullname.length === 0 ? false : !error.fullname} invalid={error.fullname} value={fullname}  onChange={handleChange(\"fullname\")} placeholder=\"Firstname Middlename Lastname\" />\r\n           <FormFeedback invalid={error.fullname}>{error&&fullname.length === 0?\"Fullname is Required\":\"It should not contain Number or symbols\"}</FormFeedback>\r\n        </div>\r\n      </FormGroup>\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\">\r\n         <div className=\"col-3 offset-1\">\r\n         <Label htmlFor=\"contactNumber\"><h3>Contact Number  </h3></Label>\r\n         </div>\r\n         <div className=\"col-7\">\r\n         <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>+91</InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input type=\"number\" name=\"contactNumber\" id=\"contactNumber\" valid={contactNumber.length === 0 ? false : !error.contactNumber} invalid={error.contactNumber} value={contactNumber} onChange={handleChange(\"contactNumber\")} placeholder=\"Enter Your Contact Number\" />\r\n             <FormFeedback invalid={error.contactNumber}>{contactNumber.length === 0?\"please enter Contact number\":\"This is Invalid Number\"}</FormFeedback>\r\n\r\n          </InputGroup>      \r\n           </div>\r\n      </FormGroup>\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\">\r\n         <div className=\"col-3 offset-1\">\r\n         <Label htmlFor=\"age\"><h3>Enter Your Age</h3></Label>\r\n         </div>\r\n         <div className=\"col-2\">\r\n             <Input type=\"text\" name=\"age\" id=\"age\" valid={age.length === 0 ? false : !error.contactNumber} invalid={error.age} value={age} onChange={handleChange(\"age\")} placeholder=\"  Age\" />\r\n             <FormFeedback invalid={error.age}>Please enter valid age</FormFeedback>\r\n\r\n        </div>\r\n        <div className=\"col-2 \">\r\n        <Label htmlFor=\"gender\" ><h3>Select Gender</h3></Label>\r\n        </div>\r\n        <div className=\"col-3\">\r\n        <FormControl  variant=\"filled\" style={{backgroundColor:\"white\",borderRadius:\"5px\"}} fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label\" htmlFor=\"age\">Gender</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"gender\"\r\n                name=\"gender\" \r\n                value={gender} \r\n                onChange={handleChange(\"gender\")}\r\n              >\r\n                <MenuItem value=\"male\">Male</MenuItem>\r\n                <MenuItem value=\"female\">Female</MenuItem>\r\n                <MenuItem value=\"others\">Others</MenuItem>\r\n              </Select>\r\n\r\n        </FormControl>\r\n        </div>\r\n      </FormGroup>\r\n      <Divider light/>  \r\n      <FormGroup className=\"row formRow\">\r\n         <div className=\"col-3 offset-1\">\r\n         <Label htmlFor=\"address\"><h3>Address</h3></Label>\r\n         </div>\r\n         <div className=\"col-7\">\r\n            <Input type=\"textarea\" name=\"address\" id=\"address\" valid={address.length === 0 ? false : !error.contactNumber} invalid={error.address} value={address} onChange={handleChange(\"address\")} placeholder=\"Enter Your Address\" />\r\n            <FormFeedback invalid={error.age}>{address.length === 0 ?\"Please enter your Address\":\"Address Should be less than 100 Character\"}</FormFeedback>\r\n\r\n        </div>\r\n      </FormGroup>\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\">\r\n         <div className=\"col-1 offset-1\">\r\n              <Label htmlFor=\"city\"><h3>City</h3></Label>\r\n         </div>\r\n         <div className=\"col-2\">\r\n         <FormControl variant=\"filled\" style={{backgroundColor:\"white\",borderRadius:\"5px\"}} fullWidth>\r\n         <InputLabel id=\"demo-simple-select-labelcity\" htmlFor=\"city\">City</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-labelcity\"\r\n                id=\"city\"\r\n                name=\"city\" \r\n                value={city} \r\n                onChange={handleChange(\"city\")}\r\n              >\r\n                {\r\n                jsonState[state].map((s,index)=>(\r\n                <MenuItem  value={s} key={index}>{s}</MenuItem>\r\n                ))}\r\n                \r\n              </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"col-1 \" style={{marginLeft:\"2%\"}}>\r\n            <Label htmlFor=\"state\"><h3>State</h3></Label>\r\n         </div>\r\n         <div className=\"col-2\">\r\n         <FormControl  variant=\"filled\" style={{backgroundColor:\"white\",borderRadius:\"5px\"}} fullWidth>\r\n         <InputLabel id=\"demo-simple-select-labelstate\" htmlFor=\"state\">State</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-labelstate\"\r\n                id=\"state\"\r\n                name=\"state\" \r\n                value={state} \r\n                onChange={handleChange(\"state\")}\r\n              >\r\n                {stateofIndia.map((s,index)=>(\r\n                <MenuItem value={s} key={index}>{s}</MenuItem>\r\n                  \r\n                ))}\r\n                \r\n              </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"col-1\"style={{marginLeft:\"1%\"}} >\r\n        <Label htmlFor=\"pincode\"><h3>Pincode</h3></Label>\r\n         </div>\r\n         <div className=\"col-2\" style={{marginLeft:\"5%\"}} >\r\n            <Input type=\"number\" name=\"pincode\" id=\"pincode\" value={pincode} valid={pincode.length === 0 ? false : !error.pincode} invalid={error.pincode} onChange={handleChange(\"pincode\")} placeholder=\"Enter Your pincode\" />\r\n            <FormFeedback invalid={error.pincode}>{pincode.length === 0 ?\"Please enter pincode\":\"Enter a Valid Pincode\"}</FormFeedback>\r\n\r\n          </div>\r\n\r\n      </FormGroup>\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\">\r\n         <div className=\"col-2 offset-1\">\r\n            <Label htmlFor=\"dateOfBirth\"><h3>Date of Birth</h3></Label>\r\n         </div>\r\n         <div className=\"col-3\">\r\n                <Input type=\"date\"  name=\"dateOfBirth\" id=\"dateOfBirth\" value={dateOfBirth} onChange={handleChange(\"dateOfBirth\")} placeholder=\"Date Of Birth\" />\r\n         </div>\r\n         <div className=\"col-2 \">\r\n          <Label htmlFor=\"bloodGroup\"><h3>Blood Group</h3></Label>\r\n         </div>\r\n         <div className=\"col-3\">\r\n         <FormControl  variant=\"filled\" style={{backgroundColor:\"white\",borderRadius:\"5px\"}} fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label-bloodGroup\" htmlFor=\"bloodGroup\">Blood Group</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label-bloodGroup\"\r\n                id=\"bloodGroup\"\r\n                name=\"bloodGroup\" \r\n                value={bloodGroup} \r\n                onChange={handleChange(\"bloodGroup\")}\r\n              >\r\n                <MenuItem value=\"A+\">A+</MenuItem>\r\n                <MenuItem value=\"A-\">A-</MenuItem>\r\n                <MenuItem value=\"B+\">B+</MenuItem>\r\n                <MenuItem value=\"B-\">B-</MenuItem>\r\n                <MenuItem value=\"O+\">O+</MenuItem>\r\n                <MenuItem value=\"O-\">O-</MenuItem>\r\n                <MenuItem value=\"AB+\">AB+</MenuItem>\r\n                <MenuItem value=\"AB-\">AB-</MenuItem>\r\n                \r\n\r\n              </Select>\r\n        </FormControl>  </div>\r\n      </FormGroup>\r\n\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\">\r\n      <div className=\"col-2 offset-1\">\r\n      <Label htmlFor=\"emergencyPhoneNumber\"><h3>Emergency Contact Number</h3></Label>\r\n         </div>\r\n         <div className=\"col-3\">\r\n         <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>+91</InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input type=\"number\" name=\"emergencyPhoneNumber\" id=\"emergencyPhoneNumber\" valid={emergencyPhoneNumber.length === 0 ? false : !error.emergencyPhoneNumber} invalid={error.emergencyPhoneNumber}value={emergencyPhoneNumber} onChange={handleChange(\"emergencyPhoneNumber\")} placeholder=\"Enter Emergency Contact Number\" />\r\n             <FormFeedback invalid={error.emergencyPhoneNumber}>{emergencyPhoneNumber.length === 0?\"please enter Contact number\":\"This is Invalid Number\"}</FormFeedback>\r\n\r\n     </InputGroup>      \r\n           </div>\r\n\r\n           {familyDoc?(\r\n             <>\r\n             <div className=\"col-2 \">\r\n             <Label htmlFor=\"familyDoctorNumber\"><h3>Family Doctor Number</h3></Label>\r\n           </div>\r\n    \r\n           <div className=\"col-3\">\r\n           <InputGroup>\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                  <InputGroupText>+91</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input type=\"number\" name=\"familyDoctorNumber\" id=\"familyDoctorNumber\" valid={familyDoctorNumber.length === 0 ? false : !error.familyDoctorNumber} invalid={error.familyDoctorNumber}value={familyDoctorNumber} onChange={handleChange(\"familyDoctorNumber\")} placeholder=\"Enter Emergency Contact Number\" />\r\n             <FormFeedback invalid={error.familyDoctorNumber}>{familyDoctorNumber.length === 0?\"please enter Contact number\":\"This is Invalid Number\"}</FormFeedback>\r\n               </InputGroup>      \r\n             <CustomInput type=\"checkbox\" checked={familyDoc} id=\"exampleCustomCheckbox\" onChange={()=>{setFamilyDoc(!familyDoc)}} label=\"un-Check if not having\" />\r\n\r\n             </div>\r\n             </>\r\n           ):(\r\n            <>\r\n            <div className=\"col-2 \">\r\n            <Label htmlFor=\"familyDoctorNumber\"><h3>having Family Doctor ? </h3></Label>\r\n          </div>\r\n   \r\n          <div className=\"col-3\" >\r\n          <InputGroup>\r\n               <CustomInput checked={familyDoc} type=\"checkbox\" id=\"exampleCustomCheckbox\" onChange={(e)=>{setFamilyDoc(!familyDoc)}}  />\r\n               <h6>Check to enter Family Doctor Number</h6>\r\n      </InputGroup>      \r\n            </div>\r\n            </>\r\n           )}\r\n      </FormGroup>\r\n\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\">\r\n       \r\n        <div className=\"col-2 offset-1\">\r\n        <Label htmlFor=\"anyDisability\" ><h3>{disabled?\"Select disability\":\"Having Disability ?\"}</h3></Label>\r\n        </div>\r\n        <div className=\"col-3\">\r\n        {\r\n              disabled?(\r\n               <>\r\n                <FormControl variant=\"filled\" style={{backgroundColor:\"white\",borderRadius:\"5px\"}} fullWidth>\r\n               <InputLabel id=\"demo-simple-select-label-anyDisability\" htmlFor=\"anyDisability\">disability</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label-anyDisability\"\r\n                id=\"anyDisability\"\r\n                name=\"anyDisability\" \r\n                value={anyDisability} \r\n                onChange={handleChange(\"anyDisability\")}\r\n              >\r\n                <MenuItem value=\"physical disability\">physical disability.</MenuItem>\r\n               <MenuItem value=\"vision Impairment\">vision Impairment</MenuItem>\r\n                <MenuItem value=\"deaf or hard of hearing\">deaf or hard of hearing</MenuItem>\r\n                <MenuItem value=\"mental health conditions\">mental health conditions</MenuItem>\r\n                <MenuItem value=\"intellectual disability\">intellectual disability</MenuItem>\r\n                <MenuItem value=\"acquired brain injury\">acquired brain injury</MenuItem>\r\n                <MenuItem value=\"autism spectrum disorder\">autism spectrum disorder</MenuItem>\r\n                <MenuItem value=\"other\">Other</MenuItem>\r\n              </Select>\r\n        </FormControl>\r\n             <CustomInput type=\"checkbox\" checked={disabled} id=\"exampleCustomCheckbox\" onChange={()=>{setDisabled(!disabled)}} label=\"un-Check if not having\" />\r\n\r\n               </>\r\n              ):(\r\n                <InputGroup style={{display:\"flex\",flexDirection:\"column\"}}>\r\n                    <CustomInput checked={disabled} type=\"checkbox\" id=\"exampleCustomCheckbox\" onChange={(e)=>{setDisabled(!disabled)}}  />\r\n                    <h6>Check to Select type of disability</h6>\r\n               </InputGroup>  \r\n              )\r\n        }\r\n        </div>\r\n        <div className=\"col-2 \">\r\n        <Label htmlFor=\"donor\" ><h3>{!don?\"Donor ?\":\"Select Donated organ\"}</h3></Label>\r\n        </div>\r\n        <div className=\"col-3\">\r\n            {don?(\r\n              <>\r\n              <FormControl variant=\"filled\" style={{backgroundColor:\"white\",borderRadius:\"5px\"}} fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label-donor\" htmlFor=\"donor\">Donor</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label-donor\"\r\n                id=\"donor\"\r\n                name=\"donor\" \r\n                value={donor} \r\n                onChange={handleChange(\"donor\")}\r\n              >\r\n                <MenuItem value=\"Kidneys\">Kidneys</MenuItem>\r\n                <MenuItem value=\"Liver\">Liver</MenuItem>\r\n                <MenuItem value=\"Lungs\">Lungs</MenuItem>\r\n                <MenuItem value=\"Heart\">Heart</MenuItem>\r\n                <MenuItem value=\"Pancreas\">Pancreas</MenuItem>\r\n                <MenuItem value=\"Intestines\">Intestines</MenuItem>\r\n                <MenuItem value=\"Hands\">Hands</MenuItem>\r\n                <MenuItem value=\"Legs\">Legs</MenuItem>\r\n                <MenuItem value=\"Eyes\">Eyes</MenuItem>\r\n              </Select>\r\n        </FormControl>\r\n             <CustomInput type=\"checkbox\" checked={don} id=\"exampleCustomCheckbox\" onChange={()=>{setDon(!don)}} label=\"un-Check if not a Donor\" />\r\n                </>\r\n            ):(\r\n              <InputGroup style={{display:\"flex\",flexDirection:\"column\"}}>\r\n                    <CustomInput checked={don} type=\"checkbox\" id=\"exampleCustomCheckbox\" onChange={()=>{setDon(!don)}}  />\r\n                    <h6>Check to Select donated Organ</h6>\r\n               </InputGroup> \r\n            )}\r\n        </div>\r\n      </FormGroup>\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\" >\r\n      <div className=\"col-4 offset-1\">\r\n        <Label htmlFor=\"severeDisease\" ><h3>Are You Suffering From any Disease</h3></Label>\r\n        <div style={{display:\"flex\",flexDirection:\"row\"}}>\r\n        <CustomInput checked={dis} type=\"checkbox\" id=\"exampleCustomCheckbox\" onChange={()=>{setDis(!dis)}}  />\r\n        <h6 style={{marginLeft:\"4%\"}}>*Check this to Write about the disease</h6>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\" style={{marginTop:\"3%\"}}>\r\n              {dis?(\r\n           <Input type=\"text\" name=\"severeDisease\" id=\"severeDisease\" valid={severeDisease.length === 0 ? false : !error.severeDisease} invalid={error.fullname} value={severeDisease}  onChange={handleChange(\"severeDisease\")} placeholder=\"Write About Disease Here\" />\r\n\r\n              ):(<></>)}\r\n        </div>\r\n      </FormGroup>\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\">\r\n            <div className=\"col-6 offset-3 \">\r\n                  <h2>Add Your Last Diagnosed Details \r\n                    <Fab color=\"primary\"  aria-label=\"add\"  onClick={toggle} style={{marginLeft:\"4%\"}}>\r\n                    <AddIcon />\r\n                  </Fab></h2>\r\n            </div>\r\n           \r\n      </FormGroup>\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\">\r\n            {items.length!==0?(\r\n              items.map((i,index)=>(\r\n                <div key={index} className=\"col-10 offset-1 itemRow\">\r\n                  <div className=\"itemValue\">\r\n                      <div className=\"itemValue2\"><h4 className=\"rowLabel\">Date</h4> <span><DateRangeOutlinedIcon/></span> </div> \r\n                      <Input   className=\"disabledInput\" disabled value={dateofDiagnosed}></Input>\r\n                  </div>\r\n                    <div className=\"itemValue\">\r\n                          <div className=\"itemValue2\"><h4>Visited</h4> <span><LocalHospitalOutlinedIcon/></span> </div> \r\n                          <Input className=\"disabledInput\" disabled value={hospitalname}></Input>\r\n\r\n                    </div>\r\n                      <div className=\"itemValue\">\r\n                      <div className=\"itemValue2\"><h4>Purpose</h4><span><ConnectWithoutContactOutlinedIcon/></span> </div> \r\n                      <Input className=\"disabledInput\" disabled value={purpose}></Input>\r\n\r\n                      </div>\r\n                \r\n                </div>\r\n              ))\r\n            ):(<></>)}\r\n      </FormGroup>\r\n      <Divider light/>\r\n      \r\n      {\r\n        img.length !==0?(\r\n          <>\r\n          <FormGroup className=\"row formRow\">\r\n            <h1 className=\"offset-1\"> Your Documents</h1>\r\n      </FormGroup>\r\n      <FormGroup className=\"row formRow\" style={{display:\"flex\"}} >\r\n              \r\n\r\n      <div className=\"col-10 offset-1\" style={{display:\"flex\",overflow:\"scroll\"}}>\r\n      {img.map((image)=>(\r\n      \r\n      <div>\r\n        <img key={image.cloudinary_id} style={{height:\"40vh\",width:\"25vw\", marginRight:\"3vw\"}} \r\n          \r\n          src={image.image_url} alt=\"images\"></img>\r\n          <Fab variant=\"extended\"style={{alignSelf:\"center\",margin:\"2%\"}} onClick={()=>{saveAs(image.image_url, image.cloudinary_id)}}>Download</Fab>\r\n         \r\n      </div>\r\n    ))}\r\n\r\n      </div>  \r\n</FormGroup>\r\n        </>\r\n        ):(<></>)\r\n      }\r\n      \r\n      <FormGroup className=\"row formRow\" >\r\n        <div className=\"offset-1 col-9\">\r\n        <h2>Upload Your Medical Dociments</h2>\r\n            <input className=\"form-control\" type=\"file\" name=\"image\" \r\n            onChange={handleChange(\"image\")}\r\n            id=\"formFileMultiple\" multiple />\r\n        </div>\r\n      </FormGroup>\r\n      <FormGroup className=\"row formRow\" >\r\n<div className=\"col-6 offset-5\">\r\n<Fab type=\"submit\" variant=\"extended\"style={{alignSelf:\"center\",margin:\"2%\",width:\"40%\",height:\"100%\"}} onClick={(e)=>{submitHandler(e)}}>Submit</Fab>\r\n\r\n  </div>        \r\n      </FormGroup>\r\n\r\n   </Form>\r\n\r\n   <div>\r\n      \r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Enter Details</ModalHeader>\r\n        <ModalBody>\r\n        <Form>\r\n          <FormGroup style={{padding:\"2%\",paddingTop:\"4%\"}}>\r\n            <Label for=\"dateofDiagnosed\"><h4>Select Date</h4></Label>\r\n            <Input type=\"date\" name=\"dateofDiagnosed\" value={dateofDiagnosed} id=\"dateofDiagnosed\" placeholder=\"select Date\"\r\n            onChange={(e)=>{setItem({...item,dateofDiagnosed:e.target.value})}}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup style={{padding:\"2%\",paddingTop:\"4%\"}}>\r\n            <Label for=\"hospitalname\"><h4>Enter Hospital or Doctors Name</h4></Label>\r\n            <Input type=\"text\" name=\"hospitalname\" id=\"hospitalname\" placeholder=\"Enter Here\" \r\n             onChange={(e)=>{setItem({...item,hospitalname:e.target.value})}}\r\n             />\r\n          </FormGroup>\r\n          <FormGroup style={{padding:\"2%\",paddingTop:\"4%\"}}>\r\n            <Label for=\"purpose\"><h4>Purpose of Visit to Hospital</h4></Label>\r\n            <Input type=\"text\" name=\"purpose\" id=\"purpose\" placeholder=\"Enter Here\" \r\n             onChange={(e)=>{setItem({...item,purpose:e.target.value})}}\r\n             />\r\n          </FormGroup>\r\n        </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={()=>\r\n          {\r\n          setitems([...items,item])\r\n          setItem({\r\n            dateofDiagnosed:\"\",\r\n            hospitalname:\"\",\r\n            purpose:\"\"\r\n          })\r\n          toggle()\r\n        }}\r\n          >Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n\r\n   </div>\r\n\r\n  )\r\n\r\n};\r\n\r\nexport default PrivateScreen;\r\n\r\n\r\n","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\ForgotPasswordScreen.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\RegisterScreen.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\ResetPasswordScreen.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\Card.js",["60"],"import React,{useState,useEffect} from 'react'\r\nimport axios from \"axios\";\r\nimport QRCode from 'qrcode.react';\r\nimport ReactToPdf from \"react-to-pdf\";\r\nimport bg from \"../bg.png\"\r\nimport  Navbar  from \"../screens/Navbar\"\r\n\r\n\r\n\r\n\r\nconst Card = ({match}) => {\r\n\r\n    useEffect(() => {\r\n        const getUserDetails= async()=>{\r\n          let {data} =   await axios.get(`/api/private/details/${match.params.user_id}`,config)\r\n           if(data){\r\n              setData({\r\n                fullname:data.fullname,\r\n                age:data.age,\r\n                image:data.images,\r\n                userId:data.user\r\n              })\r\n              \r\n           }\r\n       }\r\n      \r\n        getUserDetails()\r\n      },[] )\r\n\r\n      const [data,setData] = useState({\r\n        fullname:\"\",\r\n        age:\"\",\r\n        image:\"\",\r\n        userId:\"\"\r\n      })\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n      };\r\n\r\n    const ref = React.createRef();\r\n    \r\n    return (\r\n        <>\r\n      <Navbar/>\r\n\r\n        <div style={{display:\"flex\" ,justifyContent:\"center\",alignItems:\"center\"}}>\r\n            <ReactToPdf targetRef={ref} filename=\"div-blue.pdf\">\r\n                    {({toPdf}) => (\r\n                        <button onClick={toPdf}>Generate pdf</button>\r\n                    )}\r\n             </ReactToPdf>\r\n             <div  style={{width: 800, height: 500, backgroundImage:`url(${bg})`,position:\"relative\",border:\"1px solid\"}} ref={ref}>\r\n                    <div style={{position:\"absolute\",marginTop:230,marginLeft:30,display:\"flex\"}} >\r\n                            <QRCode\r\n                                    value={`http://localhost:3000/otherUser/${data.userId}/`}\r\n                                    size={128}\r\n                                    bgColor={\"#ffffff\"}\r\n                                    fgColor={\"#000000\"}\r\n                                    level={\"L\"}\r\n                                    includeMargin={false}\r\n                                    renderAs={\"svg\"}\r\n                                    />\r\n                        <div style={{marginLeft:10}}>\r\n                        <h1>Name:{data.fullname}</h1>\r\n                        <h2>age:{data.age}</h2>\r\n                        </div>\r\n                        </div>            \r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\Details.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76"],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\Navbar.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\stateAndCity.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":59,"column":7,"nodeType":"83","endLine":59,"endColumn":9,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"82","line":28,"column":9,"nodeType":"83","endLine":28,"endColumn":11,"suggestions":"85"},{"ruleId":"81","severity":1,"message":"82","line":49,"column":7,"nodeType":"83","endLine":49,"endColumn":9,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":93,"column":5,"nodeType":"89","messageId":"90","endLine":93,"endColumn":18},{"ruleId":"87","severity":1,"message":"91","line":94,"column":5,"nodeType":"89","messageId":"90","endLine":94,"endColumn":8},{"ruleId":"87","severity":1,"message":"92","line":95,"column":5,"nodeType":"89","messageId":"90","endLine":95,"endColumn":12},{"ruleId":"87","severity":1,"message":"93","line":96,"column":5,"nodeType":"89","messageId":"90","endLine":96,"endColumn":9},{"ruleId":"87","severity":1,"message":"94","line":97,"column":5,"nodeType":"89","messageId":"90","endLine":97,"endColumn":10},{"ruleId":"87","severity":1,"message":"95","line":98,"column":5,"nodeType":"89","messageId":"90","endLine":98,"endColumn":12},{"ruleId":"87","severity":1,"message":"96","line":99,"column":5,"nodeType":"89","messageId":"90","endLine":99,"endColumn":11},{"ruleId":"87","severity":1,"message":"97","line":100,"column":5,"nodeType":"89","messageId":"90","endLine":100,"endColumn":16},{"ruleId":"87","severity":1,"message":"98","line":101,"column":5,"nodeType":"89","messageId":"90","endLine":101,"endColumn":25},{"ruleId":"87","severity":1,"message":"99","line":102,"column":5,"nodeType":"89","messageId":"90","endLine":102,"endColumn":15},{"ruleId":"87","severity":1,"message":"100","line":103,"column":5,"nodeType":"89","messageId":"90","endLine":103,"endColumn":23},{"ruleId":"87","severity":1,"message":"101","line":104,"column":5,"nodeType":"89","messageId":"90","endLine":104,"endColumn":18},{"ruleId":"87","severity":1,"message":"102","line":105,"column":5,"nodeType":"89","messageId":"90","endLine":105,"endColumn":18},{"ruleId":"87","severity":1,"message":"103","line":106,"column":5,"nodeType":"89","messageId":"90","endLine":106,"endColumn":10},{"ruleId":"104","severity":1,"message":"105","line":155,"column":89,"nodeType":"106","messageId":"107","endLine":155,"endColumn":90},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'config' and 'match.params.user_id'. Either include them or remove the dependency array.","ArrayExpression",["110"],["111"],["112"],"no-unused-vars","'contactNumber' is assigned a value but never used.","Identifier","unusedVar","'age' is assigned a value but never used.","'address' is assigned a value but never used.","'city' is assigned a value but never used.","'state' is assigned a value but never used.","'pincode' is assigned a value but never used.","'gender' is assigned a value but never used.","'dateOfBirth' is assigned a value but never used.","'emergencyPhoneNumber' is assigned a value but never used.","'bloodGroup' is assigned a value but never used.","'familyDoctorNumber' is assigned a value but never used.","'anyDisability' is assigned a value but never used.","'severeDisease' is assigned a value but never used.","'donor' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"113","fix":"115"},{"desc":"113","fix":"116"},"Update the dependencies array to be: [config, match.params.user_id]",{"range":"117","text":"118"},{"range":"119","text":"118"},{"range":"120","text":"118"},[2201,2203],"[config, match.params.user_id]",[712,714],[1449,1451]]