[{"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\index.js":"1","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\reportWebVitals.js":"2","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\App.js":"3","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\LoginScreen.js":"4","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\routing\\PrivateRoute.js":"5","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\PrivateScreen.js":"6","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\ForgotPasswordScreen.js":"7","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\RegisterScreen.js":"8","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\ResetPasswordScreen.js":"9","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\Card.js":"10","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\Details.js":"11"},{"size":517,"mtime":1630855795325,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1630855795326,"results":"14","hashOfConfig":"13"},{"size":1669,"mtime":1632925857298,"results":"15","hashOfConfig":"13"},{"size":2635,"mtime":1630943786868,"results":"16","hashOfConfig":"13"},{"size":437,"mtime":1631020211955,"results":"17","hashOfConfig":"13"},{"size":10503,"mtime":1632916878883,"results":"18","hashOfConfig":"13"},{"size":2137,"mtime":1630909950916,"results":"19","hashOfConfig":"13"},{"size":3468,"mtime":1630909365453,"results":"20","hashOfConfig":"13"},{"size":2839,"mtime":1630910130136,"results":"21","hashOfConfig":"13"},{"size":2402,"mtime":1632925857298,"results":"22","hashOfConfig":"13"},{"size":787,"mtime":1632926076543,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"12hlvi5",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\index.js",[],["50","51"],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\reportWebVitals.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\App.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\LoginScreen.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\routing\\PrivateRoute.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\PrivateScreen.js",["52","53","54"],"\r\n\r\nimport { useState ,useEffect, Fragment} from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Form, FormGroup, Label, Input,Col ,Row, FormText} from 'reactstrap';\r\nimport { saveAs } from 'file-saver'\r\n\r\n\r\n\r\nconst PrivateScreen = ({history,match}) => {\r\n\r\n    useEffect(() => {\r\n      const getUserDetails= async()=>{\r\n        let {data} =   await axios.get(`/api/private/details/${match.params.user_id}`,config)\r\n          console.log(data)\r\n         if(data.user){\r\n            setData({\r\n              \r\n              fullname:data.fullname,\r\n              contactNumber:data.contactNumber,\r\n              address:data.address,\r\n              city:data.city,\r\n              state:data.state,\r\n              pincode:data.pincode,\r\n              gender:data.gender,\r\n              dateOfBirth:data.dateOfBirth,\r\n              emergencyPhoneNumber:data.emergencyPhoneNumber,\r\n              bloodGroup:data.bloodGroup,\r\n              familyDoctorNumber:data.familyDoctorNumber,\r\n              anyDisability:data.anyDisability,\r\n              severeDisease:data.severeDisease,\r\n              donor:data.donor,\r\n              age:data.age,\r\n              image:data.images,\r\n              userId:data.user\r\n            })\r\n            \r\n            setImg(data.images)\r\n         }\r\n     }\r\n    \r\n       getUserDetails()\r\n    },[] )\r\n\r\n\r\n  const [data,setData] = useState({\r\n    fullname:\"\",\r\n    contactNumber:\"\",\r\n    address:\"\",\r\n    city:\"\",\r\n    state:\"\",\r\n    pincode:\"\",\r\n    gender:\"\",\r\n    dateOfBirth:\"\",\r\n    emergencyPhoneNumber:\"\",\r\n    bloodGroup:\"\",\r\n    familyDoctorNumber:\"\",\r\n    anyDisability:\"\",\r\n    severeDisease:\"\",\r\n    donor:\"\",\r\n    age:\"\",\r\n    image:[],\r\n    userId:\"\"\r\n  })\r\n  const [img,setImg] = useState([])\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    },\r\n  };\r\n\r\n \r\n  const {\r\n    fullname,\r\n    contactNumber,\r\n    age,\r\n    address,\r\n    city,\r\n    state,\r\n    pincode,\r\n    gender,\r\n    dateOfBirth,\r\n    emergencyPhoneNumber,\r\n    bloodGroup,\r\n    familyDoctorNumber,\r\n    anyDisability,\r\n    severeDisease,\r\n    donor,\r\n  } = data\r\n \r\n  var formData = new FormData();\r\n  const handleChange=name=>event=>{\r\n    \r\n\r\n    if(name ===\"image\"){\r\n      let arr = Array.from(event.target.files)\r\n      setData({...data,image:arr})\r\n    }else{\r\n      const value = event.target.value\r\n      setData({...data,[name]:value})\r\n    }\r\n\r\n}\r\n  \r\n  const submitHandler = async (e)=>{\r\n    e.preventDefault()\r\n  try {\r\n    formData.set(\"fullname\",fullname)\r\n    formData.set(\"contactNumber\",contactNumber)\r\n    formData.set(\"age\",age)\r\n    formData.set(\"address\", address)\r\n    formData.set(\"city\",city)\r\n    formData.set(\"state\",state)\r\n    formData.set(\"pincode\",pincode)\r\n    formData.set(\"gender\",gender)\r\n    formData.set(\"dateOfBirth\",dateOfBirth)\r\n    formData.set(\"emergencyPhoneNumber\",emergencyPhoneNumber)\r\n    formData.set(\"bloodGroup\",bloodGroup)\r\n    formData.set(\"familyDoctorNumber\",familyDoctorNumber)\r\n    formData.set(\"anyDisability\",anyDisability)\r\n    formData.set(\"severeDisease\",severeDisease)\r\n    formData.set(\"donor\",donor)\r\n  \r\n    if(data.image){\r\n      for(var i=0;i<data.image.length;i++){\r\n        formData.append(\"image\",data.image[i])\r\n      } \r\n    }\r\n    if(!data.userId){\r\n    \r\n      await axios.post(`/api/private/details/${match.params.user_id}`,formData,config).then(\r\n        (response)=>{\r\n            console.log(response)\r\n            history.push(`/details/certificate/${match.params.user_id}`)\r\n          }\r\n      ).catch((err)=>{\r\n        console.log(err)\r\n      })\r\n    }else{\r\n\r\n      await axios.put(`/api/private/details/${match.params.user_id}`,formData,config).then(\r\n        (response)=>{\r\n            console.log(response)\r\n            history.push(`/details/certificate/${data.userId}`)\r\n        }\r\n      ).catch((err)=>{\r\n        history.push(\"/\")\r\n      })\r\n\r\n    }\r\n\r\n  } catch (error) {\r\n    \r\n    console.log(error)\r\n    history.push(\"/\")\r\n  }\r\n  \r\n}\r\n\r\n  return(\r\n\r\n    <Row>\r\n\r\n      <Col md={7}>\r\n      <Form>\r\n      <h1> Personal Details</h1>\r\n      <FormGroup>\r\n        <Label for=\"fullname\">Fullname</Label>\r\n        <Input type=\"text\" name=\"fullname\" id=\"fullname\"   value={fullname}  onChange={handleChange(\"fullname\")} placeholder=\"Enter Your Fullname\" />\r\n      </FormGroup>\r\n       <FormGroup>\r\n        <Label for=\"contactNumber\">Contact Number</Label>\r\n        <Input type=\"number\" name=\"contactNumber\" id=\"contactNumber\" value={contactNumber} onChange={handleChange(\"contactNumber\")} placeholder=\"Enter Your Contact Number\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"age\">Enter Your Age</Label>\r\n        <Input type=\"text\" name=\"age\" id=\"age\" value={age} onChange={handleChange(\"age\")} placeholder=\"Enter Your age\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"address\">Address</Label>\r\n        <Input type=\"text\" name=\"address\" id=\"address\" value={address} onChange={handleChange(\"address\")} placeholder=\"Enter Your Address\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"city\">City</Label>\r\n        <Input type=\"text\" name=\"city\" id=\"city\" value={city} onChange={handleChange(\"city\")} placeholder=\"Enter city\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"state\">State</Label>\r\n        <Input type=\"text\" name=\"state\" id=\"state\" value={state} onChange={handleChange(\"state\")} placeholder=\"Enter state\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"pincode\">Pincode</Label>\r\n        <Input type=\"number\" name=\"pincode\" id=\"pincode\" value={pincode} onChange={handleChange(\"pincode\")} placeholder=\"Enter Your pincode\" />\r\n      </FormGroup>\r\n      <FormGroup row>\r\n        <Label for=\"gender\" >Select Gender</Label>\r\n        <Col >\r\n          <Input type=\"select\" name=\"gender\" value={gender} onChange={handleChange(\"gender\")}  id=\"gender\">\r\n            <option selected value=\"male\">Male</option>\r\n            <option value=\"female\">Female</option>\r\n            <option value=\"others\">Others</option>\r\n            </Input>\r\n        </Col>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"dateOfBirth\">DOB</Label>\r\n        <Input type=\"date\" name=\"dateOfBirth\" id=\"dateOfBirth\" value={dateOfBirth} onChange={handleChange(\"dateOfBirth\")} placeholder=\"Date Of Birth\" />\r\n      </FormGroup>\r\n      <h1> Medical Details</h1>\r\n\r\n      <FormGroup>\r\n        <Label for=\"emergencyPhoneNumber\">Emergency Contact Number</Label>\r\n        <Input type=\"number\" name=\"emergencyPhoneNumber\" id=\"emergencyPhoneNumber\" value={emergencyPhoneNumber} onChange={handleChange(\"emergencyPhoneNumber\")} placeholder=\"Enter Emergency Contact Number\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"bloodGroup\">Blood Group</Label>\r\n        <Input type=\"text\" name=\"bloodGroup\" id=\"bloodGroup\" value={bloodGroup} onChange={handleChange(\"bloodGroup\")} placeholder=\"Enter Blood Group\" />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"familyDoctorNumber\">Family Doctor Number</Label>\r\n        <Input type=\"number\" name=\"familyDoctorNumber\" id=\"familyDoctorNumber\" value={familyDoctorNumber} onChange={handleChange(\"familyDoctorNumber\")} placeholder=\"Enter Family Doctor Number\" />\r\n      </FormGroup>\r\n      <FormGroup row>\r\n        <Label for=\"anyDisability\" >Disabled:</Label>\r\n        <Col >\r\n          <Input type=\"select\" name=\"anyDisability\" value={anyDisability} onChange={handleChange(\"anyDisability\")}  id=\"anyDisability\">\r\n          <option value=\"yes\">Yes</option>\r\n            <option  selected value=\"no\">No</option>\r\n            </Input>\r\n        </Col>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"severeDisease\">Enter Disease You Have</Label>\r\n        <Input type=\"text\" name=\"severeDisease\" id=\"severeDisease\" value={severeDisease} onChange={handleChange(\"severeDisease\")} placeholder=\"Enter Seperated by ,\" />\r\n      </FormGroup>\r\n      <FormGroup row>\r\n        <Label for=\"donor\" >Donor</Label>\r\n        <Col >\r\n          <Input type=\"select\" name=\"donor\" value={donor} onChange={handleChange(\"donor\")}  id=\"donor\">\r\n            <option value=\"yes\">Yes</option>\r\n            <option  selected value=\"no\">No</option>\r\n            </Input>\r\n        </Col>\r\n      </FormGroup>\r\n       <FormGroup>\r\n        <Label for=\"Images\">File</Label>\r\n        <Input  onChange={handleChange(\"image\")}\r\n                type=\"file\"\r\n                name=\"image\"\r\n                 multiple\r\n                accept=\"image\"\r\n                placeholder=\"choose a file\"/>\r\n\r\n      </FormGroup>\r\n      <Button type=\"submit\" onClick={submitHandler} >Submit</Button>\r\n    </Form>\r\n\r\n      </Col>\r\n\r\n      <Col md={3}>\r\n        <h2> Your Documents</h2>\r\n        {img.map((image)=>(\r\n            <div style={{display:\"flex\",justifyContent:\"center\",alignItem:\"center\"}}>\r\n              <img key={image.cloudinary_id} style={{height:\"30vh\",width:\"20vw\", marginLeft:\"10vw\"}} \r\n            \r\n            src={image.image_url} alt=\"images\"></img>\r\n            <button style={{alignSelf:\"center\"}} onClick={()=>{saveAs(image.image_url, image.cloudinary_id)}}>Download</button>\r\n            </div>\r\n          ))}\r\n         \r\n      </Col>\r\n\r\n    </Row>\r\n   \r\n\r\n  \r\n  )\r\n\r\n};\r\n\r\nexport default PrivateScreen;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const [error, setError] = useState(\"\");\r\n//   const [privateData, setPrivateData] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     const fetchPrivateDate = async () => {\r\n//       const config = {\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//           Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n//         },\r\n//       };\r\n\r\n//       try {\r\n//         const { data } = await axios.get(\"/api/private\", config);\r\n//         setPrivateData(data.data);\r\n//       } catch (error) {\r\n//         localStorage.removeItem(\"authToken\");\r\n//         setError(\"You are not authorized please login\");\r\n//       }\r\n//     };\r\n\r\n//     fetchPrivateDate();\r\n//   }, []);\r\n//   return error ? (\r\n//     <div>\r\n//       {history.push(\"./login\")}\r\n//       <span className=\"error-message\">{error}</span>\r\n//     </div>\r\n//     ) : (\r\n    \r\n//     <div>\r\n//        <button  className=\"btn btn-danger\"\r\n//             onClick={()=>{history.push(\"/login\") \r\n//           localStorage.removeItem(\"authToken\")\r\n//     }}\r\n//     >Logout</button>\r\n//       <div>{privateData}</div>\r\n//       <UserForm/>\r\n     \r\n//     </div>\r\n  \r\n//   );\r\n",["55","56"],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\ForgotPasswordScreen.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\RegisterScreen.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\ResetPasswordScreen.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\Card.js",["57"],"import React,{useState,useEffect} from 'react'\r\nimport axios from \"axios\";\r\nimport QRCode from 'qrcode.react';\r\nimport ReactToPdf from \"react-to-pdf\";\r\nimport bg from \"../bg.png\"\r\n\r\n\r\nconst Card = ({match}) => {\r\n\r\n    useEffect(() => {\r\n        const getUserDetails= async()=>{\r\n          let {data} =   await axios.get(`/api/private/details/${match.params.user_id}`,config)\r\n           if(data){\r\n              setData({\r\n                fullname:data.fullname,\r\n                age:data.age,\r\n                image:data.images,\r\n                userId:data.user\r\n              })\r\n              \r\n           }\r\n       }\r\n      \r\n        getUserDetails()\r\n      },[] )\r\n\r\n      const [data,setData] = useState({\r\n        fullname:\"\",\r\n        age:\"\",\r\n        image:\"\",\r\n        userId:\"\"\r\n      })\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n      };\r\n\r\n    const ref = React.createRef();\r\n    \r\n    return (\r\n\r\n        <div style={{display:\"flex\" ,justifyContent:\"center\",alignItems:\"center\"}}>\r\n            <ReactToPdf targetRef={ref} filename=\"div-blue.pdf\">\r\n                    {({toPdf}) => (\r\n                        <button onClick={toPdf}>Generate pdf</button>\r\n                    )}\r\n             </ReactToPdf>\r\n             <div  style={{width: 800, height: 500, backgroundImage:`url(${bg})`,position:\"relative\",border:\"1px solid\"}} ref={ref}>\r\n                    <div style={{position:\"absolute\",marginTop:230,marginLeft:30,display:\"flex\"}} >\r\n                            <QRCode\r\n                                    value={`http://localhost:3000/details/certificate/${data.userId}/`}\r\n                                    size={128}\r\n                                    bgColor={\"#ffffff\"}\r\n                                    fgColor={\"#000000\"}\r\n                                    level={\"L\"}\r\n                                    includeMargin={false}\r\n                                    renderAs={\"svg\"}\r\n                                    />\r\n                        <div style={{marginLeft:10}}>\r\n                        <h1>Name:{data.fullname}</h1>\r\n                        <h2>age:{data.age}</h2>\r\n                        </div>\r\n                        </div>            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\Details.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":31,"nodeType":"64","messageId":"65","endLine":3,"endColumn":39},{"ruleId":"62","severity":1,"message":"66","line":5,"column":58,"nodeType":"64","messageId":"65","endLine":5,"endColumn":66},{"ruleId":"67","severity":1,"message":"68","line":43,"column":7,"nodeType":"69","endLine":43,"endColumn":9,"suggestions":"70"},{"ruleId":"58","replacedBy":"71"},{"ruleId":"60","replacedBy":"72"},{"ruleId":"67","severity":1,"message":"68","line":25,"column":9,"nodeType":"69","endLine":25,"endColumn":11,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'FormText' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'config' and 'match.params.user_id'. Either include them or remove the dependency array.","ArrayExpression",["76"],["74"],["75"],["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"78","fix":"80"},"Update the dependencies array to be: [config, match.params.user_id]",{"range":"81","text":"82"},{"range":"83","text":"82"},[1333,1335],"[config, match.params.user_id]",[666,668]]