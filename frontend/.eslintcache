[{"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\index.js":"1","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\reportWebVitals.js":"2","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\App.js":"3","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\LoginScreen.js":"4","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\routing\\PrivateRoute.js":"5","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\PrivateScreen.js":"6","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\ForgotPasswordScreen.js":"7","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\RegisterScreen.js":"8","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\ResetPasswordScreen.js":"9","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\Card.js":"10","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\Details.js":"11","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\Navbar.js":"12","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\stateAndCity.js":"13","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\FallbackScreen.js":"14"},{"size":517,"mtime":1630855795325,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1630855795326,"results":"17","hashOfConfig":"16"},{"size":1989,"mtime":1634964904463,"results":"18","hashOfConfig":"16"},{"size":2941,"mtime":1634926498423,"results":"19","hashOfConfig":"16"},{"size":437,"mtime":1631020211955,"results":"20","hashOfConfig":"16"},{"size":29355,"mtime":1634925994594,"results":"21","hashOfConfig":"16"},{"size":2153,"mtime":1633511734955,"results":"22","hashOfConfig":"16"},{"size":3532,"mtime":1633511609251,"results":"23","hashOfConfig":"16"},{"size":2871,"mtime":1633511739389,"results":"24","hashOfConfig":"16"},{"size":2772,"mtime":1634921346940,"results":"25","hashOfConfig":"16"},{"size":11339,"mtime":1634964904799,"results":"26","hashOfConfig":"16"},{"size":1111,"mtime":1633598887171,"results":"27","hashOfConfig":"16"},{"size":24526,"mtime":1634017773043,"results":"28","hashOfConfig":"16"},{"size":828,"mtime":1634919919238,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"12hlvi5",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\index.js",[],["64","65"],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\reportWebVitals.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\App.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\LoginScreen.js",["66"],"import { useState, useEffect } from \"react\";\r\nimport { toast,ToastContainer } from \"react-toastify\";\r\nimport logoimage from \"../../logoimage.png\";\r\n\r\n\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./LoginScreen.css\";\r\nimport { display } from \"@mui/system\";\r\n\r\n\r\nconst LoginScreen = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  // const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"authToken\")) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history]);\r\n\r\n  const loginHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/auth/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n      \r\n      localStorage.setItem(\"authToken\", data.token);\r\n      history.push(`/details/${data.user_id}`);\r\n    } catch (error) {\r\n      // setError(error.response.data.error);\r\n      toast(error.response.data.error,{type:\"error\"})\r\n      setTimeout(() => {\r\n        // setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div  className=\"top\" style={{display:\"flex\",justifyContent:\"center\"}}>\r\n      <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n          <img  className=\"loginimage\" src={logoimage} alt=\"logoimage\"/>\r\n      </div>\r\n      <div className=\"login-screen\">\r\n      <form onSubmit={loginHandler} className=\"login-screen__form\">\r\n        <h3 className=\"login-screen__title\">Login<ToastContainer/></h3>\r\n        <div className=\"form-group form-groupLogin\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Email address\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            tabIndex={1}\r\n          />\r\n        </div>\r\n        <div className=\"form-group form-groupLogin\">\r\n          <label htmlFor=\"password\">\r\n            Password:{\" \"}\r\n            <Link to=\"/forgotpassword\" className=\"login-screen__forgotpassword\">\r\n              Forgot Password?\r\n            </Link>\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Enter password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n            tabIndex={2}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-success\">\r\n          Login\r\n        </button>\r\n\r\n        <span className=\"login-screen__subtext\">\r\n          Don't have an account? <Link to=\"/register\">Register</Link>\r\n        </span>\r\n      </form>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\routing\\PrivateRoute.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\PrivateScreen.js",["67","68"],"\r\n\r\nimport { useState ,useEffect, } from \"react\";\r\nimport  Navbar  from \"../screens/Navbar\"\r\nimport axios from \"axios\";\r\nimport validator from 'validator';\r\nimport { Button, Form, FormGroup, Label, Input,InputGroup, InputGroupAddon, InputGroupText,FormFeedback, CustomInput,\r\n  Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { saveAs } from 'file-saver';\r\nimport { jsonState } from \"../../stateAndCity\";\r\nimport { toast,ToastContainer } from \"react-toastify\";\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport \"./PrivateScreen.css\"\r\nimport DateRangeOutlinedIcon from '@mui/icons-material/DateRangeOutlined';\r\nimport LocalHospitalOutlinedIcon from '@mui/icons-material/LocalHospitalOutlined';\r\nimport ConnectWithoutContactOutlinedIcon from '@mui/icons-material/ConnectWithoutContactOutlined';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport DownloadingIcon from '@mui/icons-material/Downloading';\r\nimport FallbackScreen from \"../../FallbackScreen\";\r\n\r\nimport { Divider } from \"@mui/material\";\r\n\r\n\r\nconst PrivateScreen = ({history,match}) => {\r\n\r\n    useEffect(() => {\r\n      const getUserDetails= async()=>{\r\n\r\n         let {data} =  await axios.get(`/api/private/details/${match.params.user_id}`,config)\r\n              \r\n          console.log(data)\r\n         if(data.user){\r\n            setData({\r\n              \r\n              fullname:data.fullname,\r\n              contactNumber:data.contactNumber,\r\n              address:data.address,\r\n              city:data.city,\r\n              state:data.state,\r\n              pincode:data.pincode,\r\n              gender:data.gender,\r\n              dateOfBirth:new Date(data.dateOfBirth).toISOString().split(\"T\")[0],\r\n              emergencyPhoneNumber:data.emergencyPhoneNumber,\r\n              bloodGroup:data.bloodGroup,\r\n              familyDoctorNumber:data.familyDoctorNumber,\r\n              anyDisability:data.anyDisability,\r\n              severeDisease:data.severeDisease,\r\n              donor:data.donor,\r\n              age:data.age,\r\n              image:data.images,\r\n              userId:data.user,\r\n            })\r\n            \r\n            setImg(data.images)\r\n            setitems(data.items)\r\n         }\r\n         setLoading(false)\r\n     }\r\n    \r\n       getUserDetails()\r\n     \r\n    },[] )// eslint-disable-line react-hooks/exhaustive-deps\r\n    const [loading,setLoading] = useState(true);\r\n    const [familyDoc,setFamilyDoc] =  useState(false)\r\n    const [disabled,setDisabled] =  useState(false)\r\n    const [don,setDon] =  useState(false)\r\n    const [dis,setDis] =  useState(false)\r\n    const stateofIndia = Object.keys(jsonState)\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n    const [item,setItem] = useState({\r\n      dateofDiagnosed:\"\",\r\n      hospitalname:\"\",\r\n      purpose:\"\"\r\n    })\r\n    const {dateofDiagnosed} =item\r\n    \r\n    \r\n  const [data,setData] = useState({\r\n    fullname:\"\",\r\n    contactNumber:\"\",\r\n    address:\"\",\r\n    city:jsonState[stateofIndia[0]][0],\r\n    state:stateofIndia[0],\r\n    pincode:\"\",\r\n    gender:\"male\",\r\n    dateOfBirth:\"\",\r\n    emergencyPhoneNumber:\"\",\r\n    bloodGroup:\"A+\",\r\n    familyDoctorNumber:\"\",\r\n    anyDisability:\"\",\r\n    severeDisease:\"\",\r\n    donor:\"\",\r\n    age:\"\",\r\n    image:[],\r\n    userId:\"\",\r\n    items:[]\r\n  })\r\n  const [items,setitems] = useState([])\r\n  const [img,setImg] = useState([])\r\n  const [error,setError] = useState({\r\n    fullname:null,\r\n    contactNumber:null,\r\n    address:null,\r\n    pincode:null,\r\n    dateOfBirth:\"\",\r\n    emergencyPhoneNumber:null,\r\n    familyDoctorNumber:null,\r\n    age:null,\r\n    userId:\"\"\r\n  });\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    },\r\n  };\r\n\r\n \r\n  const {\r\n    fullname,\r\n    contactNumber,\r\n    age,\r\n    address,\r\n    city,\r\n    state,\r\n    pincode,\r\n    gender,\r\n    dateOfBirth,\r\n    emergencyPhoneNumber,\r\n    bloodGroup,\r\n    familyDoctorNumber,\r\n    anyDisability,\r\n    severeDisease,\r\n    donor,\r\n  } = data\r\n\r\n  function Validation(field,value){\r\n        if(field === \"contactNumber\"){ validator.isNumeric(value) && value.length ===10 && (value%1 === 0 ) ? setError({...error,contactNumber:false}):setError({...error,contactNumber:true})}\r\n        if(field === \"emergencyPhoneNumber\"){ validator.isNumeric(value) && value.length ===10 && (value%1 === 0 ) ? setError({...error,emergencyPhoneNumber:false}):setError({...error,emergencyPhoneNumber:true})}\r\n        if(field === \"familyDoctorNumber\"){ validator.isNumeric(value) && (value.length ===10 || value.length===0) && (value%1 === 0 ) ? setError({...error,familyDoctorNumber:false}):setError({...error,familyDoctorNumber:true})}\r\n        if(field === \"age\"){ (value%1 === 0 )  && value > 0 && value <=100 ? setError({...error,age:false}):setError({...error,age:true})}\r\n        if(field === \"address\"){ value.length > 0 && value.length <=100 ? setError({...error,address:false}):setError({...error,address:true})}\r\n        if(field === \"pincode\"){ validator.isNumeric(value) && value.length <=6 && value >0 ? setError({...error,pincode:false}):setError({...error,pincode:true})}\r\n        if(field === \"fullname\"){validator.isAlpha(value) || /^[A-Za-z\\s]+$/.test(value) ? setError({...error,fullname:false}):setError({...error,fullname:true})}\r\n\r\n    \r\n\r\n  } \r\n \r\n  var formData = new FormData();\r\n  const handleChange=name=>event=>{\r\n\r\n\r\n      Validation(name,event.target.value)\r\n   if(name ===\"state\"){\r\n    const value = event.target.value\r\n    setData({...data,[name]:value,city:jsonState[value][0]})\r\n   }else{\r\n    if(name ===\"image\"){\r\n      let arr = Array.from(event.target.files)\r\n      setData({...data,image:arr})\r\n    }else{\r\n      const value = event.target.value\r\n      console.log(value)\r\n      setData({...data,[name]:value})\r\n    }\r\n   }\r\n}\r\n\r\n  \r\n  const submitHandler = async (e)=>{\r\n    e.preventDefault()\r\n      if(error.fullname || error.pincode  || error.address || \r\n        error.age  || error.contactNumber  ||\r\n        error.familyDoctorNumber ){   \r\n          // setError(error.response.data.error);\r\n          console.log(error)\r\n      toast(\"Invalid Credentials\",{type:\"error\"})\r\n      return\r\n        }\r\n  try {\r\n    formData.set(\"fullname\",fullname)\r\n    formData.set(\"contactNumber\",contactNumber)\r\n    formData.set(\"age\",age)\r\n    formData.set(\"address\", address)\r\n    formData.set(\"city\",city)\r\n    formData.set(\"state\",state)\r\n    formData.set(\"pincode\",pincode)\r\n    formData.set(\"gender\",gender)\r\n    formData.set(\"dateOfBirth\",dateOfBirth)\r\n    formData.set(\"emergencyPhoneNumber\",emergencyPhoneNumber)\r\n    formData.set(\"bloodGroup\",bloodGroup)\r\n    formData.set(\"familyDoctorNumber\",familyDoctorNumber)\r\n    formData.set(\"anyDisability\",anyDisability)\r\n    formData.set(\"severeDisease\",severeDisease)\r\n    formData.set(\"donor\",donor)\r\n    formData.set(\"items\",JSON.stringify(items))\r\n    \r\n\r\n    if(data.image){\r\n      for(var i=0;i<data.image.length;i++){\r\n        formData.append(\"image\",data.image[i])\r\n      } \r\n    }\r\n    if(!data.userId){\r\n      setLoading(true)\r\n      await axios.post(`/api/private/details/${match.params.user_id}`,formData,config).then(\r\n        (response)=>{\r\n            console.log(response)\r\n            setLoading(false)\r\n            history.push(`/details/certificate/${match.params.user_id}`)\r\n          }\r\n      ).catch((err)=>{\r\n        history.push(\"./login\")\r\n      })\r\n    }else{\r\n      setLoading(true)\r\n\r\n      await axios.put(`/api/private/details/${match.params.user_id}`,formData,config).then(\r\n        (response)=>{\r\n            console.log(response)\r\n            setLoading(false)\r\n            history.push(`/details/certificate/${match.params.user_id}`)\r\n          \r\n        }\r\n      ).catch((err)=>{\r\n        console.log(err)\r\n        history.push(\"/\")\r\n      })\r\n\r\n    }\r\n\r\n  } catch (error) {\r\n    \r\n    console.log(error)\r\n    history.push(\"/\")\r\n  }\r\n  \r\n}\r\n\r\nconst deleteImage =async(imageId)=>{\r\n  var tempimg = img.filter((i)=>  i._id !== imageId)\r\n  const body ={ image_id:imageId}\r\n  axios({\r\n    method: 'post',\r\n    url: `/api/private/deleteimage/${match.params.user_id}`,\r\n    data: {\r\n      image_id:imageId\r\n    },\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n    }\r\n   \r\n  })\r\n  .then((response)=>{console.log(response)})\r\n  .catch((err)=>{console.log(err)})\r\n  setImg(tempimg)\r\n\r\n}\r\n\r\n  return(\r\n\r\n   loading?(<FallbackScreen/>):(\r\n\r\n    <div style={{backgroundImage:\"linear-gradient(#DB0B5F, #6F00ED)\",color:\"white\"}}>\r\n      <Navbar/>\r\n   <Form onSubmit={submitHandler} className=\"container parentContainer\">\r\n   <ToastContainer/>\r\n      <FormGroup className=\"row formRow\">\r\n         <div className=\"col-3 offset-1\">\r\n           <Label  className=\"formLabel\" htmlFor=\"fullname\"><h3>Fullname </h3></Label>\r\n         </div>\r\n         <div className=\"col-7\">\r\n           <Input type=\"text\" name=\"fullname\"  id=\"fullname\" valid={fullname.length === 0 ? false : !error.fullname} invalid={error.fullname} value={fullname}  onChange={handleChange(\"fullname\")} placeholder=\"Firstname Middlename Lastname\" />\r\n           <FormFeedback invalid={error.fullname}>{error&&fullname.length === 0?\"Fullname is Required\":\"It should not contain Number or symbols\"}</FormFeedback>\r\n        </div>\r\n      </FormGroup>\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\">\r\n         <div className=\"col-3 offset-1\">\r\n         <Label htmlFor=\"contactNumber\"><h3>Contact Number  </h3></Label>\r\n         </div>\r\n         <div className=\"col-7\">\r\n         <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>+91</InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input type=\"number\" name=\"contactNumber\" id=\"contactNumber\" valid={contactNumber.length === 0 ? false : !error.contactNumber} invalid={error.contactNumber} value={contactNumber} onChange={handleChange(\"contactNumber\")} placeholder=\"Enter Your Contact Number\" />\r\n             <FormFeedback invalid={error.contactNumber}>{contactNumber.length === 0?\"please enter Contact number\":\"This is Invalid Number\"}</FormFeedback>\r\n\r\n          </InputGroup>      \r\n           </div>\r\n      </FormGroup>\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\">\r\n         <div className=\"col-3 offset-1\">\r\n         <Label htmlFor=\"age\"><h3>Enter Your Age</h3></Label>\r\n         </div>\r\n         <div className=\"col-2\">\r\n             <Input type=\"text\" name=\"age\" id=\"age\" valid={age.length === 0 ? false : !error.contactNumber} invalid={error.age} value={age} onChange={handleChange(\"age\")} placeholder=\"  Age\" />\r\n             <FormFeedback invalid={error.age}>Please enter valid age</FormFeedback>\r\n\r\n        </div>\r\n        <div className=\"col-2 \">\r\n        <Label htmlFor=\"gender\" ><h3>Select Gender</h3></Label>\r\n        </div>\r\n        <div className=\"col-3\">\r\n        <FormControl  variant=\"filled\" style={{backgroundColor:\"white\",borderRadius:\"5px\"}} fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label\" htmlFor=\"age\">Gender</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"gender\"\r\n                name=\"gender\" \r\n                value={gender} \r\n                onChange={handleChange(\"gender\")}\r\n              >\r\n                <MenuItem value=\"male\">Male</MenuItem>\r\n                <MenuItem value=\"female\">Female</MenuItem>\r\n                <MenuItem value=\"others\">Others</MenuItem>\r\n              </Select>\r\n\r\n        </FormControl>\r\n        </div>\r\n      </FormGroup>\r\n      <Divider light/>  \r\n      <FormGroup className=\"row formRow\">\r\n         <div className=\"col-3 offset-1\">\r\n         <Label htmlFor=\"address\"><h3>Address</h3></Label>\r\n         </div>\r\n         <div className=\"col-7\">\r\n            <Input type=\"textarea\" name=\"address\" id=\"address\" valid={address.length === 0 ? false : !error.contactNumber} invalid={error.address} value={address} onChange={handleChange(\"address\")} placeholder=\"Enter Your Address\" />\r\n            <FormFeedback invalid={error.age}>{address.length === 0 ?\"Please enter your Address\":\"Address Should be less than 100 Character\"}</FormFeedback>\r\n\r\n        </div>\r\n      </FormGroup>\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\">\r\n         <div className=\"col-1 offset-1\">\r\n              <Label htmlFor=\"city\"><h3>City</h3></Label>\r\n         </div>\r\n         <div className=\"col-2\">\r\n         <FormControl variant=\"filled\" style={{backgroundColor:\"white\",borderRadius:\"5px\"}} fullWidth>\r\n         <InputLabel id=\"demo-simple-select-labelcity\" htmlFor=\"city\">City</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-labelcity\"\r\n                id=\"city\"\r\n                name=\"city\" \r\n                value={city} \r\n                onChange={handleChange(\"city\")}\r\n              >\r\n                {\r\n                jsonState[state].map((s,index)=>(\r\n                <MenuItem  value={s} key={index}>{s}</MenuItem>\r\n                ))}\r\n                \r\n              </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"col-1 \" style={{marginLeft:\"2%\"}}>\r\n            <Label htmlFor=\"state\"><h3>State</h3></Label>\r\n         </div>\r\n         <div className=\"col-2\">\r\n         <FormControl  variant=\"filled\" style={{backgroundColor:\"white\",borderRadius:\"5px\"}} fullWidth>\r\n         <InputLabel id=\"demo-simple-select-labelstate\" htmlFor=\"state\">State</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-labelstate\"\r\n                id=\"state\"\r\n                name=\"state\" \r\n                value={state} \r\n                onChange={handleChange(\"state\")}\r\n              >\r\n                {stateofIndia.map((s,index)=>(\r\n                <MenuItem value={s} key={index}>{s}</MenuItem>\r\n                  \r\n                ))}\r\n                \r\n              </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"col-1\"style={{marginLeft:\"1%\"}} >\r\n        <Label htmlFor=\"pincode\"><h3>Pincode</h3></Label>\r\n         </div>\r\n         <div className=\"col-2\" style={{marginLeft:\"5%\"}} >\r\n            <Input type=\"number\" name=\"pincode\" id=\"pincode\" value={pincode} valid={pincode.length === 0 ? false : !error.pincode} invalid={error.pincode} onChange={handleChange(\"pincode\")} placeholder=\"Enter Your pincode\" />\r\n            <FormFeedback invalid={error.pincode}>{pincode.length === 0 ?\"Please enter pincode\":\"Enter a Valid Pincode\"}</FormFeedback>\r\n\r\n          </div>\r\n\r\n      </FormGroup>\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\">\r\n         <div className=\"col-2 offset-1\">\r\n            <Label htmlFor=\"dateOfBirth\"><h3>Date of Birth</h3></Label>\r\n         </div>\r\n         <div className=\"col-3\">\r\n                <Input type=\"date\"  name=\"dateOfBirth\" id=\"dateOfBirth\" value={dateOfBirth} onChange={handleChange(\"dateOfBirth\")} placeholder=\"Date Of Birth\" />\r\n         </div>\r\n         <div className=\"col-2 \">\r\n          <Label htmlFor=\"bloodGroup\"><h3>Blood Group</h3></Label>\r\n         </div>\r\n         <div className=\"col-3\">\r\n         <FormControl  variant=\"filled\" style={{backgroundColor:\"white\",borderRadius:\"5px\"}} fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label-bloodGroup\" htmlFor=\"bloodGroup\">Blood Group</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label-bloodGroup\"\r\n                id=\"bloodGroup\"\r\n                name=\"bloodGroup\" \r\n                value={bloodGroup} \r\n                onChange={handleChange(\"bloodGroup\")}\r\n              >\r\n                <MenuItem value=\"A+\">A+</MenuItem>\r\n                <MenuItem value=\"A-\">A-</MenuItem>\r\n                <MenuItem value=\"B+\">B+</MenuItem>\r\n                <MenuItem value=\"B-\">B-</MenuItem>\r\n                <MenuItem value=\"O+\">O+</MenuItem>\r\n                <MenuItem value=\"O-\">O-</MenuItem>\r\n                <MenuItem value=\"AB+\">AB+</MenuItem>\r\n                <MenuItem value=\"AB-\">AB-</MenuItem>\r\n                \r\n\r\n              </Select>\r\n        </FormControl>  </div>\r\n      </FormGroup>\r\n\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\">\r\n      <div className=\"col-2 offset-1\">\r\n      <Label htmlFor=\"emergencyPhoneNumber\"><h3>Emergency Contact Number</h3></Label>\r\n         </div>\r\n         <div className=\"col-3\">\r\n         <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <InputGroupText>+91</InputGroupText>\r\n              </InputGroupAddon>\r\n              <Input type=\"number\" name=\"emergencyPhoneNumber\" id=\"emergencyPhoneNumber\" valid={emergencyPhoneNumber.length === 0 ? false : !error.emergencyPhoneNumber} invalid={error.emergencyPhoneNumber}value={emergencyPhoneNumber} onChange={handleChange(\"emergencyPhoneNumber\")} placeholder=\"Enter Emergency Contact Number\" />\r\n             <FormFeedback invalid={error.emergencyPhoneNumber}>{emergencyPhoneNumber.length === 0?\"please enter Contact number\":\"This is Invalid Number\"}</FormFeedback>\r\n\r\n     </InputGroup>      \r\n           </div>\r\n\r\n           {familyDoc?(\r\n             <>\r\n             <div className=\"col-2 \">\r\n             <Label htmlFor=\"familyDoctorNumber\"><h3>Family Doctor Number</h3></Label>\r\n           </div>\r\n    \r\n           <div className=\"col-3\">\r\n           <InputGroup>\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                  <InputGroupText>+91</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input type=\"number\" name=\"familyDoctorNumber\" id=\"familyDoctorNumber\" valid={familyDoctorNumber && familyDoctorNumber?.length === 0 ? false : !error.familyDoctorNumber} invalid={error.familyDoctorNumber}value={familyDoctorNumber} onChange={handleChange(\"familyDoctorNumber\")} placeholder=\"Enter Emergency Contact Number\" />\r\n             <FormFeedback invalid={error.familyDoctorNumber}>{familyDoctorNumber && familyDoctorNumber.length === 0?\"please enter Contact number\":\"This is Invalid Number\"}</FormFeedback>\r\n               </InputGroup>      \r\n             <CustomInput type=\"checkbox\" checked={familyDoc} id=\"exampleCustomCheckbox\" onChange={()=>{setFamilyDoc(!familyDoc)}} label=\"un-Check if not having\" />\r\n\r\n             </div>\r\n             </>\r\n           ):(\r\n            <>\r\n            <div className=\"col-2 \">\r\n            <Label htmlFor=\"familyDoctorNumber\"><h3>having Family Doctor ? </h3></Label>\r\n          </div>\r\n   \r\n          <div className=\"col-3\" >\r\n          <InputGroup>\r\n               <CustomInput checked={familyDoc} type=\"checkbox\" id=\"exampleCustomCheckbox\" onChange={(e)=>{setFamilyDoc(!familyDoc)}}  />\r\n               <h6>Check to enter Family Doctor Number</h6>\r\n      </InputGroup>      \r\n            </div>\r\n            </>\r\n           )}\r\n      </FormGroup>\r\n\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\">\r\n       \r\n        <div className=\"col-2 offset-1\">\r\n        <Label htmlFor=\"anyDisability\" ><h3>{disabled?\"Select disability\":\"Having Disability ?\"}</h3></Label>\r\n        </div>\r\n        <div className=\"col-3\">\r\n        {\r\n              disabled?(\r\n               <>\r\n                <FormControl variant=\"filled\" style={{backgroundColor:\"white\",borderRadius:\"5px\"}} fullWidth>\r\n               <InputLabel id=\"demo-simple-select-label-anyDisability\" htmlFor=\"anyDisability\">disability</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label-anyDisability\"\r\n                id=\"anyDisability\"\r\n                name=\"anyDisability\" \r\n                value={anyDisability} \r\n                onChange={handleChange(\"anyDisability\")}\r\n              >\r\n                <MenuItem value=\"physical disability\">physical disability.</MenuItem>\r\n               <MenuItem value=\"vision Impairment\">vision Impairment</MenuItem>\r\n                <MenuItem value=\"deaf or hard of hearing\">deaf or hard of hearing</MenuItem>\r\n                <MenuItem value=\"mental health conditions\">mental health conditions</MenuItem>\r\n                <MenuItem value=\"intellectual disability\">intellectual disability</MenuItem>\r\n                <MenuItem value=\"acquired brain injury\">acquired brain injury</MenuItem>\r\n                <MenuItem value=\"autism spectrum disorder\">autism spectrum disorder</MenuItem>\r\n                <MenuItem value=\"other\">Other</MenuItem>\r\n              </Select>\r\n        </FormControl>\r\n             <CustomInput type=\"checkbox\" checked={disabled} id=\"exampleCustomCheckbox\" onChange={()=>{setDisabled(!disabled)}} label=\"un-Check if not having\" />\r\n\r\n               </>\r\n              ):(\r\n                <InputGroup style={{display:\"flex\",flexDirection:\"column\"}}>\r\n                    <CustomInput checked={disabled} type=\"checkbox\" id=\"exampleCustomCheckbox\" onChange={(e)=>{setDisabled(!disabled)}}  />\r\n                    <h6>Check to Select type of disability</h6>\r\n               </InputGroup>  \r\n              )\r\n        }\r\n        </div>\r\n        <div className=\"col-2 \">\r\n        <Label htmlFor=\"donor\" ><h3>{!don?\"Donor ?\":\"Select Donated organ\"}</h3></Label>\r\n        </div>\r\n        <div className=\"col-3\">\r\n            {don?(\r\n              <>\r\n              <FormControl variant=\"filled\" style={{backgroundColor:\"white\",borderRadius:\"5px\"}} fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label-donor\" htmlFor=\"donor\">Donor</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label-donor\"\r\n                id=\"donor\"\r\n                name=\"donor\" \r\n                value={donor} \r\n                onChange={handleChange(\"donor\")}\r\n              >\r\n                <MenuItem value=\"Kidneys\">Kidneys</MenuItem>\r\n                <MenuItem value=\"Liver\">Liver</MenuItem>\r\n                <MenuItem value=\"Lungs\">Lungs</MenuItem>\r\n                <MenuItem value=\"Heart\">Heart</MenuItem>\r\n                <MenuItem value=\"Pancreas\">Pancreas</MenuItem>\r\n                <MenuItem value=\"Intestines\">Intestines</MenuItem>\r\n                <MenuItem value=\"Hands\">Hands</MenuItem>\r\n                <MenuItem value=\"Legs\">Legs</MenuItem>\r\n                <MenuItem value=\"Eyes\">Eyes</MenuItem>\r\n              </Select>\r\n        </FormControl>\r\n             <CustomInput type=\"checkbox\" checked={don} id=\"exampleCustomCheckbox\" onChange={()=>{setDon(!don)}} label=\"un-Check if not a Donor\" />\r\n                </>\r\n            ):(\r\n              <InputGroup style={{display:\"flex\",flexDirection:\"column\"}}>\r\n                    <CustomInput checked={don} type=\"checkbox\" id=\"exampleCustomCheckbox\" onChange={()=>{setDon(!don)}}  />\r\n                    <h6>Check to Select donated Organ</h6>\r\n               </InputGroup> \r\n            )}\r\n        </div>\r\n      </FormGroup>\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\" >\r\n      <div className=\"col-4 offset-1\">\r\n        <Label htmlFor=\"severeDisease\" ><h3>Are You Suffering From any Disease</h3></Label>\r\n        <div style={{display:\"flex\",flexDirection:\"row\"}}>\r\n        <CustomInput checked={dis} type=\"checkbox\" id=\"exampleCustomCheckbox\" onChange={()=>{setDis(!dis)}}  />\r\n        <h6 style={{marginLeft:\"4%\"}}>*Check this to Write about the disease</h6>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\" style={{marginTop:\"3%\"}}>\r\n              {dis?(\r\n           <Input type=\"text\" name=\"severeDisease\" id=\"severeDisease\" valid={severeDisease.length === 0 ? false : !error.severeDisease} invalid={error.fullname} value={severeDisease}  onChange={handleChange(\"severeDisease\")} placeholder=\"Write About Disease Here\" />\r\n\r\n              ):(<></>)}\r\n        </div>\r\n      </FormGroup>\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\">\r\n            <div className=\"col-6 offset-3 \">\r\n                  <h2>Add Your Last Diagnosed Details \r\n                    <Fab color=\"primary\"  aria-label=\"add\"  onClick={toggle} style={{marginLeft:\"2%\"}}>\r\n                    <AddIcon />\r\n                  </Fab></h2>\r\n            </div>\r\n           \r\n      </FormGroup>\r\n      <Divider light/>\r\n      <FormGroup className=\"row formRow\">\r\n            {items.length!==0?(\r\n              items.map((i,index)=>(\r\n                <div key={index} className=\"col-12  itemRow\">\r\n                  <div className=\"itemValue\">\r\n                      <div className=\"itemValue2\"><h4 className=\"rowLabel\">Date</h4> <span><DateRangeOutlinedIcon/></span> </div> \r\n                      <Input   className=\"disabledInput\" disabled value={i.dateofDiagnosed}></Input>\r\n                  </div>\r\n                    <div className=\" itemValue\" style={{marginLeft:\"5%\"}}>\r\n                          <div className=\"itemValue2\"><h4>Visited</h4> <span><LocalHospitalOutlinedIcon/></span> </div> \r\n                          <Input className=\"disabledInput\" disabled value={i.hospitalname}></Input>\r\n\r\n                    </div>\r\n                      <div className=\"itemValue\" style={{marginLeft:\"6%\"}}>\r\n                      <div className=\"itemValue2\" style={{marginTop:\"4%\"}}><h4>Purpose</h4><span><ConnectWithoutContactOutlinedIcon/></span> </div> \r\n                      <Input className=\"section\" style={{width:\"30vw\"}} type=\"textarea\" className=\"disabledInput\" disabled value={i.purpose}></Input>\r\n\r\n                      </div>\r\n                \r\n                </div>\r\n              ))\r\n            ):(<></>)}\r\n      </FormGroup>\r\n      <Divider light/>\r\n      \r\n      {\r\n        img.length !==0?(\r\n          <>\r\n          <FormGroup className=\"row formRow\">\r\n            <h1 className=\"offset-1\"> Your Documents</h1>\r\n      </FormGroup>\r\n      <FormGroup className=\"row formRow\" style={{display:\"flex\"}} >\r\n              \r\n\r\n      <div className=\"col-10 offset-1 section\">\r\n      {img.map((image)=>(\r\n      \r\n      <div key={image.cloudinary_id} style={{display:\"flex\",flexDirection:\"column\"}} >\r\n        <img  style={{height:\"40vh\",width:\"25vw\", marginRight:\"3vw\"}} \r\n          \r\n          src={image.image_url} alt=\"images\"></img>\r\n          <div>\r\n          <Fab variant=\"extended\"style={{alignSelf:\"center\",margin:\"2%\",backgroundColor:\"green\",color:\"white\"}} onClick={()=>{saveAs(image.image_url, image.cloudinary_id)}}><span><DownloadingIcon/>Download</span></Fab>\r\n          <Fab variant=\"extended\"style={{alignSelf:\"center\",marginLeft:\"25%\",backgroundColor:\"red\",color:\"white\"}} onClick={()=>{deleteImage(image._id)}}> <span><DeleteOutlineIcon/> </span>Delete</Fab>\r\n         \r\n            </div>\r\n      </div>\r\n    ))}\r\n\r\n      </div>  \r\n</FormGroup>\r\n        </>\r\n        ):(<></>)\r\n      }\r\n      \r\n      <FormGroup className=\"row formRow\" >\r\n        <div className=\"offset-1 col-9\">\r\n        <h2>Upload Your Medical Dociments</h2>\r\n            <input className=\"form-control\" type=\"file\" name=\"image\" \r\n            onChange={handleChange(\"image\")}\r\n            id=\"formFileMultiple\" multiple />\r\n        </div>\r\n      </FormGroup>\r\n      <FormGroup className=\"row formRow\" >\r\n<div className=\"col-6 offset-5\">\r\n<Fab type=\"submit\" variant=\"extended\"style={{alignSelf:\"center\",margin:\"2%\",width:\"40%\",height:\"100%\"}} onClick={(e)=>{submitHandler(e)}}>Submit</Fab>\r\n\r\n  </div>        \r\n      </FormGroup>\r\n\r\n   </Form>\r\n\r\n   <div>\r\n      \r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Enter Details</ModalHeader>\r\n        <ModalBody>\r\n        <Form>\r\n          <FormGroup style={{padding:\"2%\",paddingTop:\"4%\"}}>\r\n            <Label for=\"dateofDiagnosed\"><h4>Select Date</h4></Label>\r\n            <Input type=\"date\" name=\"dateofDiagnosed\" value={dateofDiagnosed} id=\"dateofDiagnosed\" placeholder=\"select Date\"\r\n            onChange={(e)=>{setItem({...item,dateofDiagnosed:e.target.value})}}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup style={{padding:\"2%\",paddingTop:\"4%\"}}>\r\n            <Label for=\"hospitalname\"><h4>Enter Hospital or Doctors Name</h4></Label>\r\n            <Input type=\"text\" name=\"hospitalname\" id=\"hospitalname\" placeholder=\"Enter Here\" \r\n             onChange={(e)=>{setItem({...item,hospitalname:e.target.value})}}\r\n             />\r\n          </FormGroup>\r\n          <FormGroup style={{padding:\"2%\",paddingTop:\"4%\"}}>\r\n            <Label for=\"purpose\"><h4>Purpose of Visit to Hospital</h4></Label>\r\n            <Input type=\"text\" name=\"purpose\" id=\"purpose\" placeholder=\"Enter Here\" \r\n             onChange={(e)=>{setItem({...item,purpose:e.target.value})}}\r\n             />\r\n          </FormGroup>\r\n        </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={()=>\r\n          {\r\n          setitems([...items,item])\r\n          setItem({\r\n            dateofDiagnosed:\"\",\r\n            hospitalname:\"\",\r\n            purpose:\"\"\r\n          })\r\n          toggle()\r\n        }}\r\n          >Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n\r\n   </div>\r\n\r\n   )\r\n  )\r\n\r\n};\r\n\r\nexport default PrivateScreen;\r\n\r\n\r\n","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\ForgotPasswordScreen.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\RegisterScreen.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\ResetPasswordScreen.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\Card.js",["69"],"import React,{useState,useEffect} from 'react'\r\nimport axios from \"axios\";\r\nimport QRCode from 'qrcode.react';\r\nimport ReactToPdf from \"react-to-pdf\";\r\nimport bg from \"../bg.png\"\r\nimport  Navbar  from \"../screens/Navbar\"\r\n\r\n\r\n\r\n\r\n\r\nconst Card = ({match}) => {\r\n\r\n    useEffect(() => {\r\n        const getUserDetails= async()=>{\r\n          \r\n          let {data} =   await axios.get(`/api/private/details/${match.params.user_id}`,config)\r\n           if(data){\r\n              setData({\r\n                fullname:data.fullname,\r\n                age:data.age,\r\n                image:data.images,\r\n                userId:data.user\r\n              })\r\n              \r\n           }\r\n           setLoading(false)\r\n       }\r\n      \r\n        getUserDetails()\r\n      },[] )// eslint-disable-line react-hooks/exhaustive-deps\r\n      const [loading,setLoading] = useState(true);\r\n      const [data,setData] = useState({\r\n        fullname:\"\",\r\n        age:\"\",\r\n        image:\"\",\r\n        userId:\"\"\r\n      })\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n      };\r\n\r\n    const ref = React.createRef();\r\n    \r\n    return (\r\n        <>\r\n       <Navbar/>\r\n\r\n        <div style={{display:\"flex\" ,justifyContent:\"center\",alignItems:\"center\"}}>\r\n            <ReactToPdf targetRef={ref} filename=\"div-blue.pdf\">\r\n                    {({toPdf}) => (\r\n                        <button onClick={toPdf}>Generate pdf</button>\r\n                    )}\r\n             </ReactToPdf>\r\n             <div  style={{width: 800, height: 500, backgroundImage:`url(${bg})`,position:\"relative\",border:\"1px solid\"}} ref={ref}>\r\n                    <div style={{position:\"absolute\",marginTop:230,marginLeft:30,display:\"flex\"}} >\r\n                            <QRCode\r\n                                    //value={`http://localhost:3000/otherUser/${data.userId}/`}\r\n                                    value={`https://onenationonehealth1.herokuapp.com/otherUser/${match.params.user_id}/`}\r\n                                    size={128}\r\n                                    bgColor={\"#ffffff\"}\r\n                                    fgColor={\"#000000\"}\r\n                                    level={\"L\"}\r\n                                    includeMargin={false}\r\n                                    renderAs={\"svg\"}\r\n                                    />\r\n                        <div style={{marginLeft:10}}>\r\n                        <h1>Name:{data.fullname}</h1>\r\n                        <h2>age:{data.age}</h2>\r\n                        </div>\r\n                        </div>            \r\n            </div>\r\n        </div> \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\Details.js",["70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88"],"\r\n\r\nimport { useState ,useEffect } from \"react\";\r\nimport { toast,ToastContainer } from \"react-toastify\";\r\nimport DoubleArrowRoundedIcon from '@mui/icons-material/DoubleArrowRounded';\r\nimport PhoneForwardedRoundedIcon from '@mui/icons-material/PhoneForwardedRounded';\r\nimport LocalPoliceRoundedIcon from '@mui/icons-material/LocalPoliceRounded';\r\nimport LocalHospitalRoundedIcon from '@mui/icons-material/LocalHospitalRounded';\r\nimport AddLocationAltRoundedIcon from '@mui/icons-material/AddLocationAltRounded';\r\nimport { Button, Form, FormGroup, Label, Input,InputGroup, InputGroupAddon, InputGroupText,FormFeedback, CustomInput,\r\n  Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport \"./Details.css\"; \r\nconst Details = ({history,match}) => {\r\n\r\n    useEffect(() => {\r\n      const getUserDetails= async()=>{\r\n        let {data} =   await axios.get(`/api/private/emergency/${match.params.user_id}`,config2)\r\n          console.log(data)\r\n         if(data.user){\r\n            setData({\r\n              fullname:data.fullname,\r\n              contactNumber:data.contactNumber,\r\n              address:data.address,\r\n              city:data.city,\r\n              state:data.state,\r\n              pincode:data.pincode,\r\n              gender:data.gender,\r\n              dateOfBirth:new Date(data.dateOfBirth).toISOString().split(\"T\")[0],\r\n              emergencyPhoneNumber:data.emergencyPhoneNumber,\r\n              bloodGroup:data.bloodGroup,\r\n              familyDoctorNumber:data.familyDoctorNumber,\r\n              anyDisability:data.anyDisability,\r\n              severeDisease:data.severeDisease,\r\n              donor:data.donor,\r\n              age:data.age,\r\n              image:data.images,\r\n              userId:data.user,\r\n              items:data.items\r\n            })\r\n            \r\n           \r\n         }else{\r\n           history.push(\"./login\")\r\n         }\r\n     }\r\n    \r\n       getUserDetails()\r\n\r\n      \r\n      navigator.geolocation.getCurrentPosition(function(position) {\r\n        console.log(position)\r\n        setlat( position.coords.latitude) ;\r\n        setlong(position.coords.longitude)\r\n       });\r\n       \r\n    },[] )// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    \r\n  const [data,setData] = useState({\r\n    fullname:\"\",\r\n    contactNumber:\"\",\r\n    address:\"\",\r\n    city:\"\",\r\n    state:\"\",\r\n    pincode:\"\",\r\n    gender:\"male\",\r\n    dateOfBirth:\"\",\r\n    emergencyPhoneNumber:\"\",\r\n    bloodGroup:\"A+\",\r\n    familyDoctorNumber:\"\",\r\n    anyDisability:\"\",\r\n    severeDisease:\"\",\r\n    donor:\"\",\r\n    age:\"\",\r\n    image:[],\r\n    userId:\"\",\r\n    items:null\r\n  })\r\n \r\n const [lat,setlat] = useState(\"\")\r\n const [long,setlong] = useState(\"\")\r\n\r\n  // const config = {\r\n  //   headers: {\r\n  //     \"Content-Type\": \"multipart/form-data\",\r\n  //     \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n  //   },\r\n  // };\r\n  const config2 = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \r\n    },\r\n  };\r\n \r\n \r\n  const {\r\n    fullname,\r\n    contactNumber,\r\n    age,\r\n    address,\r\n    city,\r\n    state,\r\n    pincode,\r\n    gender,\r\n    dateOfBirth,\r\n    emergencyPhoneNumber,\r\n    bloodGroup,\r\n    familyDoctorNumber,\r\n    anyDisability,\r\n    severeDisease,\r\n    donor,\r\n  } = data\r\n  const [otp,setOtp] = useState(Math.floor(Math.random()*1000000))\r\n  const [verifyotp,setVerifyotp] = useState()\r\nconsole.log(verifyotp)\r\n\r\n  \r\n\r\n  const sendOtp = async()=>{\r\n    await axios.post(\"/send-text\",{\"recipient\":`+919054296234`,\"textmessage\":`Otp For Emergency Login : ${otp}`},config2)\r\n       .then((res)=>(toast(\"OTP Sent\",{type:\"success\"})))\r\n       .catch(err => toast(\"OTP Not sent\",{type:\"error\"}) )\r\n  }\r\n\r\n  const verifyOtp = ()=>{\r\n    if(otp.toString() === verifyotp){\r\n      console.log(\"verified\")\r\n      history.push(`./emergencylogin/${match.params.user_id}`)\r\n    }else{\r\n      console.log(\"not verified\")\r\n      toast(\"OTP Not Valid\",{type:\"error\"})\r\n    }\r\n  }\r\n\r\n  const sendAlert = async() =>{\r\n\r\n\r\n      var location =\"\";\r\n    if(lat && long ){\r\n     location = `http://maps.google.com/maps?z=12&t=m&q=loc:${lat},${long}`\r\n\r\n    }\r\n\r\n   console.log(location)\r\n\r\n    const textmessage = `\r\n    ${fullname} has sent ALert to You \r\n    Please Contact Him He Might need your Help\r\n     his LOCATION: ${location}\r\n  `;\r\n\r\n     \r\n       await axios.post(\"/send-text\",{\"recipient\":`+919428237534`,\"textmessage\":textmessage},config2)\r\n       .then((res)=>(toast(\"Alert Sent\",{type:\"success\"})))\r\n       .catch(err => toast(\"Alert Not sent\",{type:\"error\"}) )\r\n        \r\n      \r\n\r\n }\r\n  \r\n \r\n  return(\r\n\r\n   <div className=\"container\">\r\n      <ToastContainer/>\r\n        <div className=\"row\">\r\n                <div className=\"col-sm-12 header\">\r\n                    <h1>One Nation One Health</h1>\r\n                   \r\n                </div>\r\n        </div>\r\n        <div className=\"row field\">\r\n             <div className=\"col-4\">\r\n                <h2>Call police</h2>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <h2><DoubleArrowRoundedIcon/></h2>\r\n            </div>\r\n            <div className=\"col-6 offset-1\">\r\n            <button className=\"btn btn-danger\" >\r\n            <a href={`tel:100`} style={{textDecoration:\"none\"}}><span><LocalPoliceRoundedIcon/></span> click to call</a>\r\n\r\n            </button>\r\n\r\n            </div>\r\n        </div>\r\n        <div className=\"row field\">\r\n             <div className=\"col-4\">\r\n                <h2>Call Ambulance</h2>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <h2><DoubleArrowRoundedIcon/></h2>\r\n            </div>\r\n            <div className=\"col-6 offset-1\">\r\n            <button className=\"btn btn-danger\" >\r\n            <a href={`tel:102`} style={{textDecoration:\"none\"}}><span><LocalHospitalRoundedIcon/></span> click to call</a>\r\n\r\n            </button>\r\n\r\n            </div>\r\n        </div>\r\n        <div className=\"row field\">\r\n             <div className=\"col-4\">\r\n                <h2>Family Member</h2>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <h2><DoubleArrowRoundedIcon/></h2>\r\n            </div>\r\n            <div className=\"col-6 offset-1\">\r\n            <button className=\"btn btn-danger\" onClick={sendAlert}>\r\n            <span><AddLocationAltRoundedIcon/></span>Send Alert\r\n\r\n            </button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"row field\">\r\n             <div className=\"col-4\">\r\n                <h2>Fullname</h2>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <h2><DoubleArrowRoundedIcon/></h2>\r\n            </div>\r\n            <div className=\"col-6 offset-1 value\">\r\n                <h3>{fullname}</h3>\r\n            </div>\r\n        </div>\r\n        <div className=\"row field\">\r\n             <div className=\"col-4\">\r\n                <h2>Age</h2>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <h2><DoubleArrowRoundedIcon/></h2>\r\n            </div>\r\n            <div className=\"col-6 offset-1 value\">\r\n                <h3>{age}</h3>\r\n            </div>\r\n        </div>\r\n        <div className=\"row field\">\r\n             <div className=\"col-4\">\r\n                <h2>Donor</h2>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <h2><DoubleArrowRoundedIcon/></h2>\r\n            </div>\r\n            <div className=\"col-6 offset-1 value\">\r\n                <h3>{donor?donor:\"No\"}</h3>\r\n            </div>\r\n        </div>\r\n        <div className=\"row field\">\r\n             <div className=\"col-4\">\r\n                <h2>Blood Group</h2>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <h2><DoubleArrowRoundedIcon/></h2>\r\n            </div>\r\n            <div className=\"col-6 offset-1 value\">\r\n                <h3>{bloodGroup}</h3>\r\n            </div>\r\n        </div>\r\n        <div className=\"row field\">\r\n             <div className=\"col-4\">\r\n                <h2>Disability</h2>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <h2><DoubleArrowRoundedIcon/></h2>\r\n            </div>\r\n            <div className=\"col-6 offset-1 value\">\r\n                <h3>{anyDisability?anyDisability:\"No\"}</h3>\r\n            </div>\r\n        </div>\r\n        <div className=\"row field\">\r\n             <div className=\"col-4\">\r\n                <h2>severe Disease</h2>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <h2><DoubleArrowRoundedIcon/></h2>\r\n            </div>\r\n            <div className=\"col-6 offset-1 value\">\r\n                <h3>{severeDisease?severeDisease:\"No\"}</h3>\r\n            </div>\r\n        </div>\r\n        <div className=\"row field\">\r\n             <div className=\"col-4\">\r\n                <h2>Emergency Contact</h2>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <h2><DoubleArrowRoundedIcon/></h2>\r\n            </div>\r\n            <div className=\"col-6 offset-1 value\">\r\n                <h3>{`+91${emergencyPhoneNumber}`}</h3>\r\n               <a href={`tel:+91${emergencyPhoneNumber}`}><span><PhoneForwardedRoundedIcon/></span> click to call</a>\r\n            </div>\r\n        </div>\r\n        <div className=\"row field\">\r\n             <div className=\"col-4\">\r\n                <h2>Family Doctor</h2>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <h2><DoubleArrowRoundedIcon/></h2>\r\n            </div>\r\n            <div className=\"col-6 offset-1 value\">\r\n                <h3>{`+91${familyDoctorNumber}`}</h3>\r\n               <a href={`tel:+91${familyDoctorNumber}`}><span><PhoneForwardedRoundedIcon/></span> click to call</a>\r\n            </div>\r\n        </div>\r\n        <div className=\"row field\">\r\n             <div className=\"col-4\">\r\n                <h2>Date of Birth</h2>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <h2><DoubleArrowRoundedIcon/></h2>\r\n            </div>\r\n            <div className=\"col-6 offset-1 value\">\r\n                <h3>{dateOfBirth}</h3>\r\n                <span>year-month-day</span>\r\n            </div>\r\n        </div>\r\n        <div className=\"row field\">\r\n             <div className=\"col-4\">\r\n                <h2>City</h2>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <h2><DoubleArrowRoundedIcon/></h2>\r\n            </div>\r\n            <div className=\"col-6 offset-1 value\">\r\n                <h3>{city}</h3>\r\n            </div>\r\n        </div>\r\n        <div className=\"row field\">\r\n             <div className=\"col-4\">\r\n                <h2>State</h2>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <h2><DoubleArrowRoundedIcon/></h2>\r\n            </div>\r\n            <div className=\"col-6 offset-1 value\">\r\n                <h3>{state}</h3>\r\n            </div>\r\n        </div>\r\n        <div className=\"row field\">\r\n             <div className=\"col-8 offset-3\">\r\n                <button className=\"btn btn-primary\" onClick={sendOtp} >EmergencyLogin</button>\r\n            </div>            \r\n        </div>\r\n\r\n        <div className=\"row field\">\r\n             <h3>enter verification code</h3>\r\n            <input value={verifyotp} onChange={(e)=>setVerifyotp(e.target.value)}></input> \r\n            <button className=\"btn btn-success \" onClick={verifyOtp}>Verify and Login</button>       \r\n        </div>\r\n\r\n\r\n   \r\n   </div>\r\n\r\n  )\r\n\r\n};\r\n\r\nexport default Details;\r\n\r\n\r\n","D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\components\\screens\\Navbar.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\stateAndCity.js",[],"D:\\REACT.js\\OneNationOneHealth\\frontend\\src\\FallbackScreen.js",["89"],"\r\nimport { useState } from \"react\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\n\r\nfunction FallbackScreen() {\r\n  let loading=true\r\n  let color=\"blue\"\r\n\r\n\r\n  let style={\r\n      display:\"flex\",\r\n      justifyContent:\"center\",\r\n      alignItems:\"center\",\r\n      flexDirection:\"column\",\r\n      backgroundColor:\"black\",\r\n      width:\"100%\",\r\n      height:\"100vh\",\r\n      color:\"white\",\r\n      \r\n\r\n    }\r\n\r\n  return (\r\n    <div className=\"sweet-loading\" style={style}>\r\n            <h1>Loading<span style={{paddingTop:\"5%\"}}><PulseLoader color={color} loading={loading} speedMultiplier={0.5}  size={10} /></span></h1>\r\n             <RingLoader color={color} loading={loading} speedMultiplier={1.5}  size={250} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FallbackScreen;",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":9,"column":10,"nodeType":"96","messageId":"97","endLine":9,"endColumn":17},{"ruleId":"94","severity":1,"message":"98","line":251,"column":9,"nodeType":"96","messageId":"97","endLine":251,"endColumn":13},{"ruleId":"99","severity":1,"message":"100","line":602,"column":89,"nodeType":"101","endLine":602,"endColumn":114},{"ruleId":"94","severity":1,"message":"102","line":32,"column":14,"nodeType":"96","messageId":"97","endLine":32,"endColumn":21},{"ruleId":"94","severity":1,"message":"103","line":10,"column":10,"nodeType":"96","messageId":"97","endLine":10,"endColumn":16},{"ruleId":"94","severity":1,"message":"104","line":10,"column":18,"nodeType":"96","messageId":"97","endLine":10,"endColumn":22},{"ruleId":"94","severity":1,"message":"105","line":10,"column":24,"nodeType":"96","messageId":"97","endLine":10,"endColumn":33},{"ruleId":"94","severity":1,"message":"106","line":10,"column":35,"nodeType":"96","messageId":"97","endLine":10,"endColumn":40},{"ruleId":"94","severity":1,"message":"107","line":10,"column":42,"nodeType":"96","messageId":"97","endLine":10,"endColumn":47},{"ruleId":"94","severity":1,"message":"108","line":10,"column":48,"nodeType":"96","messageId":"97","endLine":10,"endColumn":58},{"ruleId":"94","severity":1,"message":"109","line":10,"column":60,"nodeType":"96","messageId":"97","endLine":10,"endColumn":75},{"ruleId":"94","severity":1,"message":"110","line":10,"column":77,"nodeType":"96","messageId":"97","endLine":10,"endColumn":91},{"ruleId":"94","severity":1,"message":"111","line":10,"column":92,"nodeType":"96","messageId":"97","endLine":10,"endColumn":104},{"ruleId":"94","severity":1,"message":"112","line":10,"column":106,"nodeType":"96","messageId":"97","endLine":10,"endColumn":117},{"ruleId":"94","severity":1,"message":"113","line":11,"column":3,"nodeType":"96","messageId":"97","endLine":11,"endColumn":8},{"ruleId":"94","severity":1,"message":"114","line":11,"column":10,"nodeType":"96","messageId":"97","endLine":11,"endColumn":21},{"ruleId":"94","severity":1,"message":"115","line":11,"column":23,"nodeType":"96","messageId":"97","endLine":11,"endColumn":32},{"ruleId":"94","severity":1,"message":"116","line":11,"column":34,"nodeType":"96","messageId":"97","endLine":11,"endColumn":45},{"ruleId":"94","severity":1,"message":"117","line":100,"column":5,"nodeType":"96","messageId":"97","endLine":100,"endColumn":18},{"ruleId":"94","severity":1,"message":"118","line":102,"column":5,"nodeType":"96","messageId":"97","endLine":102,"endColumn":12},{"ruleId":"94","severity":1,"message":"119","line":105,"column":5,"nodeType":"96","messageId":"97","endLine":105,"endColumn":12},{"ruleId":"94","severity":1,"message":"120","line":106,"column":5,"nodeType":"96","messageId":"97","endLine":106,"endColumn":11},{"ruleId":"94","severity":1,"message":"121","line":115,"column":14,"nodeType":"96","messageId":"97","endLine":115,"endColumn":20},{"ruleId":"94","severity":1,"message":"122","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":18},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'display' is defined but never used.","Identifier","unusedVar","'body' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'loading' is assigned a value but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'InputGroup' is defined but never used.","'InputGroupAddon' is defined but never used.","'InputGroupText' is defined but never used.","'FormFeedback' is defined but never used.","'CustomInput' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'contactNumber' is assigned a value but never used.","'address' is assigned a value but never used.","'pincode' is assigned a value but never used.","'gender' is assigned a value but never used.","'setOtp' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]